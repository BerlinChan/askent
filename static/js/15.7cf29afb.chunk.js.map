{"version":3,"sources":["../../../node_modules/ramda/es/internal/_has.js","components/QuestionToggleButton/index.tsx","../../../node_modules/ramda/es/type.js","../../../node_modules/@material-ui/icons/Unarchive.js","../../../node_modules/@material-ui/icons/Archive.js","components/QuestionOrderMenu/index.tsx","../../../node_modules/@material-ui/icons/ArrowDropDown.js","../../../node_modules/@material-ui/icons/AccessTime.js","../../../node_modules/@material-ui/icons/Send.js","../../../node_modules/@material-ui/icons/Clear.js","../../../node_modules/ramda/es/internal/_arrayFromIterator.js","../../../node_modules/ramda/es/internal/_objectIs.js","../../../node_modules/ramda/es/internal/_isArguments.js","../../../node_modules/ramda/es/keys.js","../../../node_modules/ramda/es/internal/_equals.js","../../../node_modules/ramda/es/internal/_functionName.js","../../../node_modules/ramda/es/equals.js","../../../node_modules/@material-ui/icons/Star.js","../../../node_modules/@material-ui/icons/Check.js","../../../node_modules/@material-ui/icons/Sort.js","routes/admin/event/questions/QuestionItem.tsx","routes/admin/event/questions/QuestionItemMenu.tsx","routes/admin/event/questions/reply/ReplyItem.tsx","routes/admin/event/questions/reply/ReplyListHeader.tsx","routes/admin/event/questions/reply/ReplyListMenu.tsx","routes/admin/event/questions/reply/ReplyList.tsx","routes/admin/event/questions/reply/ReplyForm.tsx","routes/admin/event/questions/reply/ReplyDialog.tsx","routes/admin/event/questions/QuestionList.tsx","routes/admin/event/questions/ActionReview.tsx","routes/admin/event/questions/ActionRight.tsx","routes/admin/event/questions/index.tsx"],"names":["_has","prop","obj","Object","prototype","hasOwnProperty","call","QuestionToggleButton","id","status","onTitle","offTitle","onIcon","offIcon","handleToggle","rest","title","onClick","e","type","_curry1","val","undefined","toString","slice","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","value","default","React","_default","createElement","d","getQuestionOrderLabel","QuestionOrder","Popular","defaultMessage","Recent","Oldest","Starred","OrderSelectMenu","classes","anchorOrigin","transformOrigin","menuElState","orderSelectedState","orderSelected","setOrderSelected","menuEl","setMenuEl","handleMenuClose","keepMounted","anchorEl","getContentAnchorEl","open","Boolean","onClose","values","map","item","className","menuItem","selected","Fragment","_arrayFromIterator","iter","next","list","done","push","is","a","b","_isArguments","arguments","x","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","idx","length","keys","nIdx","ks","checkArgsLength","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","_a","_b","_equals","_includesWith","aItem","_objectIs","typeA","equals","constructor","f","match","String","_functionName","valueOf","name","message","source","global","ignoreCase","multiline","sticky","unicode","size","entries","concat","keysA","extendedStackA","extendedStackB","key","_curry2","useStyles","makeStyles","theme","createStyles","listItem","flexWrap","position","display","starQuestion","backgroundColor","alpha","palette","warning","light","topQuestion","success","questionMeta","marginLeft","spacing","marginRight","questionContent","width","reply","cursor","editContentForm","editContentAction","justifyContent","editContentFormButtons","questionActionBox","alignItems","top","right","height","QuestionListItem","question","handleMoreClick","eventDetailData","editContent","handleEditContentToggle","editContentInputRef","isScrolling","showReplyCount","replyDialogState","formatMessage","useIntl","useUpdateQuestionReviewStatusMutation","updateQuestionReviewStatusMutation","updateQuestionReviewStatusLoading","loading","useUpdateQuestionStarMutation","updateQuestionStarMutation","updateQuestionStarLoading","useUpdateQuestionTopMutation","updateQuestionTopMutation","updateQuestionTopLoading","useUpdateQuestionContentMutation","updateQuestionContentMutation","updateQuestionContentLoading","handleArchiveClick","currentStatus","variables","questionId","reviewStatus","ReviewStatus","Publish","Archive","handlePublishClick","Review","handleStarClick","star","handleTopClick","ListItem","component","divider","ListItemAvatar","Avatar","alt","anonymous","author","src","avatar","ListItemText","primary","Typography","variant","color","secondary","style","fontSize","voteUpCount","createdAt","initialValues","content","validationSchema","Yup","max","QUESTION_CONTENT_MAX_LENGTH","required","onSubmit","formProps","TextField","inputRef","fullWidth","margin","disabled","Box","Button","replyCount","num","moderation","IconButton","memo","prevProps","nextProps","R","QuestionItemMenu","moreMenuState","editContentIdsState","moreMenu","setMoreMenu","useState","deleteConfirm","setDeleteConfirm","useDeleteQuestionMutation","deleteQuestionMutation","handleMoreClose","handleCloseDelete","handleDelete","editContentIds","setEditContentIds","Menu","MenuListProps","dense","vertical","horizontal","MenuItem","findId","find","filter","setTimeout","current","focus","ListItemIcon","Confirm","contentText","okText","onCancel","onOk","background","archived","meta","actionBox","ReplyListItem","useUpdateReplyReviewStatusMutation","updateReplyReviewStatusMutation","updateReplyReviewStatusLoading","useUpdateReplyContentMutation","updateReplyContentMutation","updateReplyContentLoading","replyId","ReplyListHeader","useRef","CircularProgress","QuestionItem","event","currentTarget","includes","ReplyListMenu","useDeleteReplyMutation","deleteReplyMutation","ReplyList","setIsScrolling","limit","DEFAULT_PAGE_LIMIT","offset","DEFAULT_PAGE_OFFSET","order_by","Order_By","Desc","replyLiveQueryInput","setReplyLiveQueryInput","questionLiveQueryData","setQuestionLiveQueryData","replyLiveQueryData","setReplyLiveQueryData","useReplyLiveQuerySubscription","onSubscriptionData","client","subscriptionData","data","replies","handleMoreOpen","minHeight","totalCount","scrolling","endReached","itemContent","index","ReplyItem","components","Header","Footer","ListFooter","hasNextPage","getHasNextPage","contentFormControl","flexDirection","replyInput","flex","typography","pxToRem","helperTextBox","nameBox","nameInput","anonymousSwitchLabel","mobileSubmit","marginTop","ReplyForm","autoFocus","onAfterSubmit","enqueueSnackbar","useSnackbar","userMeData","useMeQuery","useCreateReplyMutation","createReplyMutation","useUpdateUserMutation","updateAudienceUserMutation","updateUserLoading","me","handleSubmit","formikBag","console","log","input","resetForm","renderAvatarName","InputBase","placeholder","renderAnonymousSwitch","FormControlLabel","labelPlacement","control","Switch","currentAnonymous","label","renderSubmitButton","trim","enableReinitialize","REPLY_CONTENT_MAX_LENGTH","USER_NAME_MAX_LENGTH","FormControl","minRows","maxRows","FormHelperText","error","touched","errors","form","ReplyDialog","replyDialog","setReplyDialog","handleClose","assign","Dialog","scroll","TransitionProps","onExited","DialogTitleWithClose","DialogContent","QuestionList","questionQueryState","questionQueryInput","questionCountLiveQueryData","setQuestionCountLiveQueryData","moreMenuContextQuestion","useMemo","useQuestionLiveQuerySubscription","useQuestionCountLiveQuerySubscription","where","question_aggregate","aggregate","count","ActionReview","useParams","useUpdateEventMutation","updateEventMutation","useDeleteAllReviewQuestionsMutation","deleteAllReviewQuestionsMutation","usePublishAllReviewQuestionsMutation","publishAllReviewQuestionsMutation","confirmModeration","setConfirmModeration","handleModerationChange","eventId","handleDeleteAll","handlePublishAll","checked","onChange","disableBackdropClick","disableEscapeKeyDown","cancelText","filterBox","padding","borderRadius","shape","paper","boxShadow","shadows","text","filterMenuList","searchAndSort","iconButton","searchInputRoot","searchInputInput","transition","transitions","create","breakpoints","up","getQuestionFilterLabel","QuestionFilter","ActionRight","filterAnchorEl","setFilterAnchorEl","searchRef","orderMenuElState","queryState","setQueryState","handleFilterClose","Tooltip","arrow","placement","InputProps","disableUnderline","root","endAdornment","InputAdornment","searchString","target","filterItem","QuestionOrderMenu","questionsGrid","gridItem","listActions","gridItemPaper","overflowX","overflowY","rightPaper","moderationOffTips","Questions","questionReviewQueryState","questionOrderSelectedState","_eq","_ilike","getQuestionOrderByCondition","questionReviewQueryInput","Grid","container","sm","Paper","align","paragraph"],"mappings":"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","file":"static/js/15.7cf29afb.chunk.js","sourcesContent":["export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","import React from \"react\";\nimport { IconButtonProps, IconButton, Tooltip } from \"@material-ui/core\";\n\nexport type handleToggleType = (\n  event: React.MouseEvent<HTMLButtonElement>,\n  id: string,\n  currentStatus: boolean\n) => void;\n\ninterface Props {\n  id: string;\n  status: boolean;\n  onTitle: string;\n  offTitle: string;\n  onIcon: React.ReactNode;\n  offIcon: React.ReactNode;\n\n  handleToggle: handleToggleType;\n}\n\nconst QuestionToggleButton: React.FC<Props & IconButtonProps> = ({\n  id,\n  status,\n  onTitle,\n  offTitle,\n  onIcon,\n  offIcon,\n  handleToggle,\n  ...rest\n}) => {\n  return (\n    <Tooltip title={status ? onTitle : offTitle}>\n      <span>\n        <IconButton {...rest} onClick={e => handleToggle(e, id, status)}>\n          {status ? onIcon : offIcon}\n        </IconButton>\n      </span>\n    </Tooltip>\n  );\n};\n\nexport default QuestionToggleButton;\n","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\nvar type =\n/*#__PURE__*/\n_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\n\nexport default type;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20.55 5.22l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.15.55L3.46 5.22C3.17 5.57 3 6.01 3 6.5V19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.49-.17-.93-.45-1.28zM12 9.5l5.5 5.5H14v2h-4v-2H6.5L12 9.5zM5.12 5l.82-1h12l.93 1H5.12z\"\n}), 'Unarchive');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20.54 5.23l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27zM12 17.5L6.5 12H10v-2h4v2h3.5L12 17.5zM5.12 5l.81-1h12l.94 1H5.12z\"\n}), 'Archive');\n\nexports.default = _default;","import React from \"react\";\nimport { Menu, MenuItem, PopoverOrigin } from \"@material-ui/core\";\nimport { QuestionOrder } from \"../../constant\";\nimport { FormattedMessage } from \"react-intl\";\n\nexport const getQuestionOrderLabel = (value: QuestionOrder) => {\n  switch (value) {\n    case QuestionOrder.Popular:\n      return <FormattedMessage id=\"Popular\" defaultMessage=\"Popular\" />;\n    case QuestionOrder.Recent:\n      return <FormattedMessage id=\"Recent\" defaultMessage=\"Recent\" />;\n    case QuestionOrder.Oldest:\n      return <FormattedMessage id=\"Oldest\" defaultMessage=\"Oldest\" />;\n    case QuestionOrder.Starred:\n      return <FormattedMessage id=\"Starred\" defaultMessage=\"Starred\" />;\n  }\n};\n\ninterface Props {\n  classes?: { menuItem?: string };\n  anchorOrigin?: PopoverOrigin;\n  transformOrigin?: PopoverOrigin;\n  menuElState: [\n    HTMLElement | null,\n    React.Dispatch<React.SetStateAction<HTMLElement | null>>\n  ];\n  orderSelectedState: [\n    QuestionOrder,\n    React.Dispatch<React.SetStateAction<QuestionOrder>>\n  ];\n}\n\nconst OrderSelectMenu: React.FC<Props> = ({\n  classes,\n  anchorOrigin,\n  transformOrigin,\n  menuElState,\n  orderSelectedState\n}) => {\n  const [orderSelected, setOrderSelected] = orderSelectedState;\n  const [menuEl, setMenuEl] = menuElState;\n\n  const handleMenuClose = () => {\n    setMenuEl(null);\n  };\n  const handleSortChange = (selected: QuestionOrder) => {\n    setOrderSelected(selected);\n    handleMenuClose();\n  };\n\n  return (\n    <Menu\n      keepMounted\n      anchorEl={menuEl}\n      getContentAnchorEl={null}\n      anchorOrigin={anchorOrigin}\n      transformOrigin={transformOrigin}\n      open={Boolean(menuEl)}\n      onClose={handleMenuClose}\n    >\n      {Object.values(QuestionOrder).map(item => (\n        <MenuItem\n          className={classes?.menuItem}\n          key={item}\n          selected={orderSelected === item}\n          onClick={() => handleSortChange(item)}\n        >\n          {getQuestionOrderLabel(item)}\n        </MenuItem>\n      ))}\n    </Menu>\n  );\n};\n\nexport default OrderSelectMenu;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7 10l5 5 5-5z\"\n}), 'ArrowDropDown');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"\n})), 'AccessTime');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n\n  return list;\n}","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nexport default typeof Object.is === 'function' ? Object.is : _objectIs;","import _has from \"./_has.js\";\nvar toString = Object.prototype.toString;\n\nvar _isArguments =\n/*#__PURE__*/\nfunction () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nexport default _isArguments;","import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\nimport _isArguments from \"./internal/_isArguments.js\"; // cover IE < 9 keys issues\n\nvar hasEnumBug = !\n/*#__PURE__*/\n{\n  toString: null\n}.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug\n\nvar hasArgsEnumBug =\n/*#__PURE__*/\nfunction () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n};\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\n\n\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ?\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) :\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n\n  var prop, nIdx;\n  var ks = [];\n\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n\n      nIdx -= 1;\n    }\n  }\n\n  return ks;\n});\nexport default keys;","import _arrayFromIterator from \"./_arrayFromIterator.js\";\nimport _includesWith from \"./_includesWith.js\";\nimport _functionName from \"./_functionName.js\";\nimport _has from \"./_has.js\";\nimport _objectIs from \"./_objectIs.js\";\nimport keys from \"../keys.js\";\nimport type from \"../type.js\";\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  } // if *a* array contains any element that is not included in *b*\n\n\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n\n      break;\n\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n\n      break;\n\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n\n      break;\n\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n\n      break;\n  }\n\n  var idx = stackA.length - 1;\n\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n  idx = keysA.length - 1;\n\n  while (idx >= 0) {\n    var key = keysA[idx];\n\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n\n    idx -= 1;\n  }\n\n  return true;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _equals from \"./internal/_equals.js\";\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\nvar equals =\n/*#__PURE__*/\n_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\nexport default equals;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n}), 'Star');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 18h6v-2H3v2zM3 6v2h18V6H3zm0 7h12v-2H3v2z\"\n}), 'Sort');\n\nexports.default = _default;","import React from \"react\";\nimport * as R from \"ramda\";\nimport {\n  Box,\n  Typography,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  Avatar,\n  IconButton,\n  Button,\n} from \"@material-ui/core\";\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  alpha,\n} from \"@material-ui/core/styles\";\nimport {\n  useIntl,\n  FormattedMessage,\n  FormattedDate,\n  FormattedTime,\n} from \"react-intl\";\nimport {\n  useUpdateQuestionReviewStatusMutation,\n  useUpdateQuestionStarMutation,\n  useUpdateQuestionTopMutation,\n  useUpdateQuestionContentMutation,\n  ReviewStatus,\n} from \"../../../../generated/graphqlHooks\";\nimport {\n  EventDetailLiveQueryFieldsFragment,\n  QuestionLiveQueryFieldsFragment,\n} from \"../../../../generated/hasuraHooks\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\nimport UnarchiveIcon from \"@material-ui/icons/Unarchive\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport TopIcon from \"@material-ui/icons/Publish\";\nimport QuestionToggleButton, {\n  handleToggleType,\n} from \"../../../../components/QuestionToggleButton\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ButtonLoading } from \"../../../../components/Form\";\nimport { QUESTION_CONTENT_MAX_LENGTH } from \"askent-common/src/constant\";\nimport { TextField } from \"formik-material-ui\";\nimport { ReplyDialogStateType } from \"./reply/ReplyDialog\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    listItem: {\n      flexWrap: \"wrap\",\n      position: \"relative\",\n      \"&:hover .questionHover\": { display: \"inline-flex\" },\n      \"& .questionHover\": { display: \"none\" },\n    },\n    starQuestion: {\n      backgroundColor: alpha(theme.palette.warning.light, 0.3),\n    },\n    topQuestion: {\n      backgroundColor: alpha(theme.palette.success.light, 0.3),\n    },\n    questionMeta: {\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(1),\n    },\n    questionContent: { width: \"100%\" },\n    reply: { cursor: \"pointer\" },\n    editContentForm: { width: \"100%\" },\n    editContentAction: { display: \"flex\", justifyContent: \"space-between\" },\n    editContentFormButtons: { \"& > *\": { display: \"inline-block\" } },\n    questionActionBox: {\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      top: 0,\n      right: 8,\n      height: 48,\n    },\n  })\n);\n\ninterface Props {\n  question: QuestionLiveQueryFieldsFragment;\n  eventDetailData: EventDetailLiveQueryFieldsFragment | undefined;\n  handleMoreClick?: (\n    event: React.MouseEvent<HTMLButtonElement>,\n    id: string\n  ) => void;\n  editContent?: boolean;\n  handleEditContentToggle?: (id: string) => void;\n  editContentInputRef?: React.RefObject<HTMLInputElement>;\n  isScrolling?: boolean;\n  showReplyCount?: boolean;\n  replyDialogState?: [\n    ReplyDialogStateType,\n    React.Dispatch<React.SetStateAction<ReplyDialogStateType>>\n  ];\n}\n\nconst QuestionListItem: React.FC<Props> = ({\n  question,\n  handleMoreClick,\n  eventDetailData,\n  editContent = false,\n  handleEditContentToggle = () => {},\n  editContentInputRef,\n  isScrolling = false,\n  showReplyCount = true,\n  replyDialogState,\n}) => {\n  const classes = useStyles();\n  const { formatMessage } = useIntl();\n  const [\n    updateQuestionReviewStatusMutation,\n    { loading: updateQuestionReviewStatusLoading },\n  ] = useUpdateQuestionReviewStatusMutation();\n  const [updateQuestionStarMutation, { loading: updateQuestionStarLoading }] =\n    useUpdateQuestionStarMutation();\n  const [updateQuestionTopMutation, { loading: updateQuestionTopLoading }] =\n    useUpdateQuestionTopMutation();\n  const [\n    updateQuestionContentMutation,\n    { loading: updateQuestionContentLoading },\n  ] = useUpdateQuestionContentMutation();\n\n  const handleArchiveClick: handleToggleType = async (e, id, currentStatus) => {\n    await updateQuestionReviewStatusMutation({\n      variables: {\n        questionId: id,\n        reviewStatus: currentStatus\n          ? ReviewStatus.Publish\n          : ReviewStatus.Archive,\n      },\n    });\n  };\n  const handlePublishClick: handleToggleType = async (e, id, currentStatus) => {\n    await updateQuestionReviewStatusMutation({\n      variables: {\n        questionId: id,\n        reviewStatus: currentStatus\n          ? ReviewStatus.Review\n          : ReviewStatus.Publish,\n      },\n    });\n  };\n  const handleStarClick: handleToggleType = async (e, id, star) => {\n    await updateQuestionStarMutation({\n      variables: { questionId: id, star: !star },\n    });\n  };\n  const handleTopClick: handleToggleType = async (e, id, top) => {\n    await updateQuestionTopMutation({\n      variables: { questionId: id, top: !top },\n    });\n  };\n\n  const handleOpenReply = () => {\n    if (replyDialogState) {\n      replyDialogState[1]({ open: true, questionId: question.id });\n    }\n  };\n\n  return (\n    <ListItem\n      component=\"div\"\n      className={`${classes.listItem} ${\n        question.star ? classes.starQuestion : \"\"\n      } ${question.top ? classes.topQuestion : \"\"}`}\n      alignItems=\"flex-start\"\n      divider\n    >\n      <ListItemAvatar>\n        <Avatar\n          alt={\n            !question.anonymous && question.author?.name\n              ? question.author?.name\n              : \"\"\n          }\n          src={\n            question.anonymous || isScrolling\n              ? \"\"\n              : (question.author?.avatar as string)\n          }\n        />\n      </ListItemAvatar>\n      <ListItemText\n        primary={\n          <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\n            {!question.anonymous && question.author?.name ? (\n              question.author?.name\n            ) : (\n              <FormattedMessage id=\"Anonymous\" defaultMessage=\"Anonymous\" />\n            )}\n          </Typography>\n        }\n        secondary={\n          <React.Fragment>\n            <ThumbUpIcon style={{ fontSize: 12 }} />\n            <Typography\n              className={classes.questionMeta}\n              component=\"span\"\n              variant=\"body2\"\n              color=\"inherit\"\n            >\n              {question.voteUpCount}\n            </Typography>\n            <AccessTimeIcon style={{ fontSize: 12 }} />\n            <Typography\n              className={classes.questionMeta}\n              component=\"span\"\n              variant=\"body2\"\n              color=\"inherit\"\n            >\n              <FormattedDate value={question.createdAt} />\n              {\", \"}\n              <FormattedTime value={question.createdAt} />\n            </Typography>\n          </React.Fragment>\n        }\n      />\n      {editContent ? (\n        <Formik\n          initialValues={{ content: question.content }}\n          validationSchema={Yup.object({\n            content: Yup.string().max(QUESTION_CONTENT_MAX_LENGTH).required(),\n          })}\n          onSubmit={async (values) => {\n            await updateQuestionContentMutation({\n              variables: {\n                questionId: question.id,\n                content: values.content,\n              },\n            });\n            handleEditContentToggle(question.id);\n          }}\n        >\n          {(formProps) => (\n            <Form className={classes.editContentForm}>\n              <Field\n                component={TextField}\n                inputRef={editContentInputRef}\n                fullWidth\n                id=\"content\"\n                name=\"content\"\n                margin=\"normal\"\n                size=\"small\"\n                disabled={updateQuestionContentLoading}\n              />\n              <Box className={classes.editContentAction}>\n                <Typography\n                  variant=\"body2\"\n                  color={\n                    QUESTION_CONTENT_MAX_LENGTH -\n                      formProps.values.content.length <\n                    0\n                      ? \"error\"\n                      : \"textSecondary\"\n                  }\n                >\n                  {QUESTION_CONTENT_MAX_LENGTH -\n                    formProps.values.content.length}\n                </Typography>\n                <Box className={classes.editContentFormButtons}>\n                  <Button\n                    size=\"small\"\n                    onClick={() => handleEditContentToggle(question.id)}\n                  >\n                    <FormattedMessage id=\"Cancel\" defaultMessage=\"Cancel\" />\n                  </Button>\n                  <ButtonLoading\n                    size=\"small\"\n                    type=\"submit\"\n                    color=\"primary\"\n                    loading={updateQuestionContentLoading}\n                    disabled={updateQuestionContentLoading}\n                  >\n                    <FormattedMessage id=\"Save\" defaultMessage=\"Save\" />\n                  </ButtonLoading>\n                </Box>\n              </Box>\n            </Form>\n          )}\n        </Formik>\n      ) : (\n        <React.Fragment>\n          <Typography className={classes.questionContent} variant=\"body1\">\n            {question.content}\n          </Typography>\n          {showReplyCount && Boolean(question.replyCount) && (\n            <Typography\n              className={classes.reply}\n              variant=\"body2\"\n              color=\"textSecondary\"\n              onClick={handleOpenReply}\n            >\n              <FormattedMessage\n                id=\"replyCount\"\n                defaultMessage=\"{num, plural, one {# reply} other {# replies}}\"\n                values={{ num: question.replyCount }}\n              />\n            </Typography>\n          )}\n          <Box className={classes.questionActionBox}>\n            {(question.reviewStatus === ReviewStatus.Publish ||\n              question.reviewStatus === ReviewStatus.Archive) && (\n              <QuestionToggleButton\n                className=\"questionHover\"\n                id={question.id}\n                status={question.star}\n                onTitle={formatMessage({\n                  id: \"Unstar\",\n                  defaultMessage: \"Unstar\",\n                })}\n                offTitle={formatMessage({\n                  id: \"Star\",\n                  defaultMessage: \"Star\",\n                })}\n                onIcon={<StarIcon fontSize=\"inherit\" color=\"secondary\" />}\n                offIcon={<StarIcon fontSize=\"inherit\" color=\"inherit\" />}\n                disabled={updateQuestionStarLoading}\n                handleToggle={handleStarClick}\n              />\n            )}\n            {question.reviewStatus === ReviewStatus.Publish && (\n              <QuestionToggleButton\n                className=\"questionHover\"\n                id={question.id}\n                status={question.top}\n                onTitle={formatMessage({\n                  id: \"Untop\",\n                  defaultMessage: \"Untop\",\n                })}\n                offTitle={formatMessage({ id: \"Top\", defaultMessage: \"Top\" })}\n                onIcon={<TopIcon fontSize=\"inherit\" color=\"secondary\" />}\n                offIcon={<TopIcon fontSize=\"inherit\" color=\"inherit\" />}\n                disabled={updateQuestionTopLoading}\n                handleToggle={handleTopClick}\n              />\n            )}\n            {eventDetailData?.moderation &&\n              (question.reviewStatus === ReviewStatus.Publish ||\n                question.reviewStatus === ReviewStatus.Review) && (\n                <QuestionToggleButton\n                  className=\"questionHover\"\n                  id={question.id}\n                  status={question.reviewStatus === ReviewStatus.Publish}\n                  onTitle={formatMessage({\n                    id: \"Unpublish\",\n                    defaultMessage: \"Unpublish\",\n                  })}\n                  offTitle={formatMessage({\n                    id: \"Publish\",\n                    defaultMessage: \"Publish\",\n                  })}\n                  onIcon={<ClearIcon fontSize=\"inherit\" />}\n                  offIcon={<CheckIcon fontSize=\"inherit\" />}\n                  disabled={updateQuestionReviewStatusLoading}\n                  handleToggle={handlePublishClick}\n                />\n              )}\n            {(question.reviewStatus === ReviewStatus.Publish ||\n              question.reviewStatus === ReviewStatus.Archive) && (\n              <QuestionToggleButton\n                className=\"questionHover\"\n                id={question.id}\n                status={question.reviewStatus === ReviewStatus.Archive}\n                onTitle={formatMessage({\n                  id: \"Unarchive\",\n                  defaultMessage: \"Unarchive\",\n                })}\n                offTitle={formatMessage({\n                  id: \"Archive\",\n                  defaultMessage: \"Archive\",\n                })}\n                onIcon={<UnarchiveIcon fontSize=\"inherit\" />}\n                offIcon={<ArchiveIcon fontSize=\"inherit\" />}\n                disabled={updateQuestionReviewStatusLoading}\n                handleToggle={handleArchiveClick}\n              />\n            )}\n\n            {handleMoreClick ? (\n              <IconButton\n                size=\"small\"\n                onClick={(e) => handleMoreClick(e, question.id)}\n              >\n                <MoreHorizIcon fontSize=\"inherit\" />\n              </IconButton>\n            ) : null}\n          </Box>\n        </React.Fragment>\n      )}\n    </ListItem>\n  );\n};\n\nexport default React.memo(QuestionListItem, (prevProps, nextProps) => {\n  /*\n  return true if passing nextProps to render would return\n  the same result as passing prevProps to render,\n  otherwise return false\n  */\n  return R.equals(prevProps, nextProps);\n});\n","import React from \"react\";\nimport { ListItemIcon, ListItemText, Menu, MenuItem } from \"@material-ui/core\";\nimport { useIntl, FormattedMessage } from \"react-intl\";\nimport {\n  useDeleteQuestionMutation,\n} from \"../../../../generated/graphqlHooks\";\nimport { QuestionLiveQueryFieldsFragment } from \"../../../../generated/hasuraHooks\";\nimport Confirm from \"../../../../components/Confirm\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ReplyIcon from \"@material-ui/icons/Reply\";\nimport { ReplyDialogStateType } from \"./reply/ReplyDialog\";\n\ntype MoreMenuStateType = {\n  anchorEl: HTMLElement | null;\n  id: string;\n};\n\ninterface Props {\n  question?: QuestionLiveQueryFieldsFragment;\n  moreMenuState: [\n    MoreMenuStateType,\n    React.Dispatch<React.SetStateAction<MoreMenuStateType>>\n  ];\n  editContentInputRef: React.RefObject<HTMLInputElement>;\n  editContentIdsState: [\n    string[],\n    React.Dispatch<React.SetStateAction<string[]>>\n  ];\n  replyDialogState?: [\n    ReplyDialogStateType,\n    React.Dispatch<React.SetStateAction<ReplyDialogStateType>>\n  ];\n}\n\nconst QuestionItemMenu: React.FC<Props> = ({\n  question,\n  moreMenuState,\n  editContentInputRef,\n  editContentIdsState,\n  replyDialogState,\n}) => {\n  const { formatMessage } = useIntl();\n  const [moreMenu, setMoreMenu] = moreMenuState;\n  const [deleteConfirm, setDeleteConfirm] = React.useState({\n    open: false,\n    id: \"\",\n  });\n  const [deleteQuestionMutation] = useDeleteQuestionMutation();\n\n  const handleMoreClose = () => {\n    setMoreMenu({ anchorEl: null, id: \"\" });\n  };\n\n  const handleOpenDelete = (id: string) => {\n    setDeleteConfirm({ open: true, id });\n    handleMoreClose();\n  };\n  const handleCloseDelete = () => {\n    setDeleteConfirm({ open: false, id: \"\" });\n  };\n  const handleDelete = async () => {\n    await deleteQuestionMutation({\n      variables: { questionId: deleteConfirm.id },\n    });\n    handleCloseDelete();\n  };\n  const handleOpenReply = (id: string) => {\n    if (replyDialogState) {\n      replyDialogState[1]({ open: true, questionId: id });\n      handleMoreClose();\n    }\n  };\n  const [editContentIds, setEditContentIds] = editContentIdsState;\n  const handleEditContentToggle = (id: string) => {\n    const findId = editContentIds.find((item) => item === id);\n    setEditContentIds(\n      findId\n        ? editContentIds.filter((item) => item !== id)\n        : editContentIds.concat([id])\n    );\n    handleMoreClose();\n    setTimeout(() => editContentInputRef.current?.focus(), 100);\n  };\n\n  return (\n    <React.Fragment>\n      <Menu\n        MenuListProps={{ dense: true }}\n        anchorEl={moreMenu.anchorEl}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        open={Boolean(moreMenu.anchorEl)}\n        onClose={handleMoreClose}\n      >\n        <MenuItem onClick={() => handleEditContentToggle(moreMenu.id)}>\n          <ListItemIcon>\n            <EditIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText\n            primary={formatMessage({\n              id: \"Edit\",\n              defaultMessage: \"Edit\",\n            })}\n          />\n        </MenuItem>\n        {replyDialogState ? (\n          <MenuItem onClick={() => handleOpenReply(moreMenu.id)}>\n            <ListItemIcon>\n              <ReplyIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText\n              primary={formatMessage({\n                id: \"Reply\",\n                defaultMessage: \"Reply\",\n              })}\n            />\n          </MenuItem>\n        ) : null}\n        <MenuItem\n          disabled={question?.top}\n          onClick={() => handleOpenDelete(moreMenu.id)}\n        >\n          <ListItemIcon>\n            <DeleteForeverIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText\n            primary={formatMessage({\n              id: \"Delete\",\n              defaultMessage: \"Delete\",\n            })}\n          />\n        </MenuItem>\n      </Menu>\n\n      <Confirm\n        open={deleteConfirm.open}\n        contentText={\n          <FormattedMessage\n            id=\"Delete_this_question?\"\n            defaultMessage=\"Delete this question?\"\n          />\n        }\n        okText={<FormattedMessage id=\"Delete\" defaultMessage=\"Delete\" />}\n        onCancel={handleCloseDelete}\n        onOk={handleDelete}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default QuestionItemMenu;\n","import React from \"react\";\nimport * as R from \"ramda\";\nimport {\n  Box,\n  Typography,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  Avatar,\n  IconButton,\n  Button,\n} from \"@material-ui/core\";\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  alpha,\n} from \"@material-ui/core/styles\";\nimport {\n  useIntl,\n  FormattedMessage,\n  FormattedDate,\n  FormattedTime,\n} from \"react-intl\";\nimport {\n  ReviewStatus,\n  useUpdateReplyContentMutation,\n  useUpdateReplyReviewStatusMutation,\n} from \"../../../../../generated/graphqlHooks\";\nimport { ReplyLiveQueryFieldsFragment } from \"../../../../../generated/hasuraHooks\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\nimport UnarchiveIcon from \"@material-ui/icons/Unarchive\";\nimport QuestionToggleButton, {\n  handleToggleType,\n} from \"../../../../../components/QuestionToggleButton\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ButtonLoading } from \"../../../../../components/Form\";\nimport { QUESTION_CONTENT_MAX_LENGTH } from \"askent-common/src/constant\";\nimport { TextField } from \"formik-material-ui\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    listItem: {\n      flexWrap: \"wrap\",\n      position: \"relative\",\n      backgroundColor: theme.palette.background.default,\n      \"&:hover .questionHover\": { display: \"inline-flex\" },\n      \"& .questionHover\": { display: \"none\" },\n    },\n    archived: {\n      backgroundColor: alpha(theme.palette.warning.light, 0.3),\n    },\n    meta: {\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(1),\n    },\n    content: { width: \"100%\" },\n    editContentForm: { width: \"100%\" },\n    editContentAction: { display: \"flex\", justifyContent: \"space-between\" },\n    editContentFormButtons: { \"& > *\": { display: \"inline-block\" } },\n    actionBox: {\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      top: 0,\n      right: 8,\n      height: 48,\n    },\n  })\n);\n\ninterface Props {\n  reply: ReplyLiveQueryFieldsFragment;\n  handleMoreClick: (\n    event: React.MouseEvent<HTMLButtonElement>,\n    id: string\n  ) => void;\n  editContent: boolean;\n  handleEditContentToggle: (id: string) => void;\n  editContentInputRef: React.RefObject<HTMLInputElement>;\n  isScrolling?: boolean;\n}\n\nconst ReplyListItem: React.FC<Props> = ({\n  reply,\n  handleMoreClick,\n  editContent,\n  handleEditContentToggle,\n  editContentInputRef,\n  isScrolling = false,\n}) => {\n  const classes = useStyles();\n  const { formatMessage } = useIntl();\n  const [\n    updateReplyReviewStatusMutation,\n    { loading: updateReplyReviewStatusLoading },\n  ] = useUpdateReplyReviewStatusMutation();\n  const [\n    updateReplyContentMutation,\n    { loading: updateReplyContentLoading },\n  ] = useUpdateReplyContentMutation();\n\n  const handleArchiveClick: handleToggleType = async (e, id, currentStatus) => {\n    await updateReplyReviewStatusMutation({\n      variables: {\n        replyId: id,\n        reviewStatus: currentStatus\n          ? ReviewStatus.Publish\n          : ReviewStatus.Archive,\n      },\n    });\n  };\n\n  return (\n    <ListItem\n      component=\"div\"\n      className={`${classes.listItem} ${\n        reply.reviewStatus === ReviewStatus.Archive ? classes.archived : \"\"\n      }`}\n      alignItems=\"flex-start\"\n      divider\n    >\n      <React.Fragment>\n        <ListItemAvatar>\n          <Avatar\n            alt={reply.author?.name as string}\n            src={isScrolling ? \"\" : reply.author?.avatar || \"\"}\n          />\n        </ListItemAvatar>\n        <ListItemText\n          primary={\n            <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\n              {reply.author?.name ? (\n                reply.author?.name\n              ) : (\n                <FormattedMessage id=\"Anonymous\" defaultMessage=\"Anonymous\" />\n              )}\n            </Typography>\n          }\n          secondary={\n            <React.Fragment>\n              <AccessTimeIcon style={{ fontSize: 12 }} />\n              <Typography\n                className={classes.meta}\n                component=\"span\"\n                variant=\"body2\"\n                color=\"inherit\"\n              >\n                <FormattedDate value={reply.createdAt} />\n                {\", \"}\n                <FormattedTime value={reply.createdAt} />\n              </Typography>\n            </React.Fragment>\n          }\n        />\n        {editContent ? (\n          <Formik\n            initialValues={{ content: reply.content }}\n            validationSchema={Yup.object({\n              content: Yup.string().max(QUESTION_CONTENT_MAX_LENGTH).required(),\n            })}\n            onSubmit={async (values) => {\n              await updateReplyContentMutation({\n                variables: {\n                  replyId: reply.id,\n                  content: values.content,\n                },\n              });\n              handleEditContentToggle(reply.id);\n            }}\n          >\n            {(formProps) => (\n              <Form className={classes.editContentForm}>\n                <Field\n                  component={TextField}\n                  inputRef={editContentInputRef}\n                  fullWidth\n                  id=\"content\"\n                  name=\"content\"\n                  margin=\"normal\"\n                  size=\"small\"\n                  disabled={updateReplyContentLoading}\n                />\n                <Box className={classes.editContentAction}>\n                  <Typography\n                    variant=\"body2\"\n                    color={\n                      QUESTION_CONTENT_MAX_LENGTH -\n                        formProps.values.content.length <\n                      0\n                        ? \"error\"\n                        : \"textSecondary\"\n                    }\n                  >\n                    {QUESTION_CONTENT_MAX_LENGTH -\n                      formProps.values.content.length}\n                  </Typography>\n                  <Box className={classes.editContentFormButtons}>\n                    <Button\n                      size=\"small\"\n                      onClick={() => handleEditContentToggle(reply.id)}\n                    >\n                      <FormattedMessage id=\"Cancel\" defaultMessage=\"Cancel\" />\n                    </Button>\n                    <ButtonLoading\n                      size=\"small\"\n                      type=\"submit\"\n                      color=\"primary\"\n                      loading={updateReplyContentLoading}\n                      disabled={updateReplyContentLoading}\n                    >\n                      <FormattedMessage id=\"Save\" defaultMessage=\"Save\" />\n                    </ButtonLoading>\n                  </Box>\n                </Box>\n              </Form>\n            )}\n          </Formik>\n        ) : (\n          <React.Fragment>\n            <Typography className={classes.content} variant=\"body1\">\n              {reply.content}\n            </Typography>\n            <Box className={classes.actionBox}>\n              {(reply.reviewStatus === ReviewStatus.Publish ||\n                reply.reviewStatus === ReviewStatus.Archive) && (\n                <QuestionToggleButton\n                  className=\"questionHover\"\n                  id={reply.id}\n                  status={reply.reviewStatus === ReviewStatus.Archive}\n                  onTitle={formatMessage({\n                    id: \"Unarchive\",\n                    defaultMessage: \"Unarchive\",\n                  })}\n                  offTitle={formatMessage({\n                    id: \"Archive\",\n                    defaultMessage: \"Archive\",\n                  })}\n                  onIcon={<UnarchiveIcon fontSize=\"inherit\" />}\n                  offIcon={<ArchiveIcon fontSize=\"inherit\" />}\n                  disabled={updateReplyReviewStatusLoading}\n                  handleToggle={handleArchiveClick}\n                />\n              )}\n\n              <IconButton\n                size=\"small\"\n                onClick={(e) => handleMoreClick(e, reply.id)}\n              >\n                <MoreHorizIcon fontSize=\"inherit\" />\n              </IconButton>\n            </Box>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    </ListItem>\n  );\n};\n\nexport default React.memo(ReplyListItem, (prevProps, nextProps) => {\n  /*\n  return true if passing nextProps to render would return\n  the same result as passing prevProps to render,\n  otherwise return false\n  */\n  return R.equals(prevProps, nextProps);\n});\n","import React from \"react\";\nimport * as R from \"ramda\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport {\n  EventDetailLiveQueryFieldsFragment,\n  QuestionLiveQueryFieldsFragment,\n} from \"../../../../../generated/hasuraHooks\";\nimport QuestionItem from \"../QuestionItem\";\nimport QuestionItemMenu from \"../QuestionItemMenu\";\n\ninterface Props {\n  loading: boolean;\n  isScrolling?: boolean;\n  question?: QuestionLiveQueryFieldsFragment;\n  eventDetailData: EventDetailLiveQueryFieldsFragment | undefined;\n}\n\nconst ReplyListHeader: React.FC<Props> = ({\n  loading,\n  isScrolling = false,\n  question,\n  eventDetailData,\n}) => {\n  const moreMenuState = React.useState<{\n    anchorEl: null | HTMLElement;\n    id: string;\n  }>({ anchorEl: null, id: \"\" });\n  const editContentInputRef = React.useRef<HTMLInputElement>(null);\n  const editContentIdsState = React.useState<Array<string>>([]);\n\n  const handleMoreClose = () => {\n    moreMenuState[1]({ anchorEl: null, id: \"\" });\n  };\n\n  const handleMoreOpen = (\n    event: React.MouseEvent<HTMLButtonElement>,\n    id: string\n  ) => {\n    moreMenuState[1]({ anchorEl: event.currentTarget, id });\n  };\n\n  const handleEditContentToggle = (id: string) => {\n    const findId = editContentIdsState[0].find((item) => item === id);\n    editContentIdsState[1](\n      findId\n        ? editContentIdsState[0].filter((item) => item !== id)\n        : editContentIdsState[0].concat([id])\n    );\n    handleMoreClose();\n    setTimeout(() => editContentInputRef.current?.focus(), 100);\n  };\n\n  return (\n    <React.Fragment>\n      {loading ? (\n        <CircularProgress />\n      ) : question ? (\n        <QuestionItem\n          question={question}\n          eventDetailData={eventDetailData}\n          handleMoreClick={handleMoreOpen}\n          editContent={editContentIdsState[0].includes(question.id)}\n          handleEditContentToggle={handleEditContentToggle}\n          editContentInputRef={editContentInputRef}\n          isScrolling={isScrolling}\n          showReplyCount={false}\n        />\n      ) : null}\n\n      <QuestionItemMenu\n        question={question}\n        moreMenuState={moreMenuState}\n        editContentInputRef={editContentInputRef}\n        editContentIdsState={editContentIdsState}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(ReplyListHeader, (prevProps, nextProps) => {\n  /*\n  return true if passing nextProps to render would return\n  the same result as passing prevProps to render,\n  otherwise return false\n  */\n  return R.equals(prevProps, nextProps);\n});\n","import React from \"react\";\nimport { ListItemIcon, ListItemText, Menu, MenuItem } from \"@material-ui/core\";\nimport { useIntl, FormattedMessage } from \"react-intl\";\nimport { useDeleteReplyMutation } from \"../../../../../generated/graphqlHooks\";\nimport Confirm from \"../../../../../components/Confirm\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\ntype MoreMenuStateType = {\n  anchorEl: HTMLElement | null;\n  id: string;\n};\n\ninterface Props {\n  moreMenuState: [\n    MoreMenuStateType,\n    React.Dispatch<React.SetStateAction<MoreMenuStateType>>\n  ];\n  editContentInputRef: React.RefObject<HTMLInputElement>;\n  editContentIdsState: [\n    string[],\n    React.Dispatch<React.SetStateAction<string[]>>\n  ];\n}\n\nconst ReplyListMenu: React.FC<Props> = ({\n  moreMenuState,\n  editContentInputRef,\n  editContentIdsState,\n}) => {\n  const { formatMessage } = useIntl();\n  const [moreMenu, setMoreMenu] = moreMenuState;\n  const [deleteConfirm, setDeleteConfirm] = React.useState({\n    open: false,\n    id: \"\",\n  });\n  const [deleteReplyMutation] = useDeleteReplyMutation();\n\n  const handleMoreClose = () => {\n    setMoreMenu({ anchorEl: null, id: \"\" });\n  };\n\n  const handleOpenDelete = (id: string) => {\n    setDeleteConfirm({ open: true, id });\n    handleMoreClose();\n  };\n  const handleCloseDelete = () => {\n    setDeleteConfirm({ open: false, id: \"\" });\n  };\n  const handleDelete = async () => {\n    await deleteReplyMutation({\n      variables: { replyId: deleteConfirm.id },\n    });\n    handleCloseDelete();\n  };\n  const [editContentIds, setEditContentIds] = editContentIdsState;\n  const handleEditContentToggle = (id: string) => {\n    const findId = editContentIds.find((item) => item === id);\n    setEditContentIds(\n      findId\n        ? editContentIds.filter((item) => item !== id)\n        : editContentIds.concat([id])\n    );\n    handleMoreClose();\n    setTimeout(() => editContentInputRef.current?.focus(), 100);\n  };\n\n  return (\n    <React.Fragment>\n      <Menu\n        MenuListProps={{ dense: true }}\n        anchorEl={moreMenu.anchorEl}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        open={Boolean(moreMenu.anchorEl)}\n        onClose={handleMoreClose}\n      >\n        <MenuItem onClick={() => handleEditContentToggle(moreMenu.id)}>\n          <ListItemIcon>\n            <EditIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText\n            primary={formatMessage({\n              id: \"Edit\",\n              defaultMessage: \"Edit\",\n            })}\n          />\n        </MenuItem>\n        <MenuItem onClick={() => handleOpenDelete(moreMenu.id)}>\n          <ListItemIcon>\n            <DeleteForeverIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText\n            primary={formatMessage({\n              id: \"Delete\",\n              defaultMessage: \"Delete\",\n            })}\n          />\n        </MenuItem>\n      </Menu>\n      <Confirm\n        open={deleteConfirm.open}\n        contentText={<FormattedMessage id=\"Delete this reply?\" defaultMessage=\"Delete this reply?\" />}\n        okText={<FormattedMessage id=\"Delete\" defaultMessage=\"Delete\" />}\n        onCancel={handleCloseDelete}\n        onOk={handleDelete}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default ReplyListMenu;\n","import React from \"react\";\nimport {\n  useReplyLiveQuerySubscription,\n  ReplyLiveQueryFieldsFragment,\n  ReplyLiveQuerySubscriptionVariables,\n  Order_By,\n  EventDetailLiveQueryFieldsFragment,\n  QuestionLiveQueryFieldsFragment,\n} from \"../../../../../generated/hasuraHooks\";\nimport { Virtuoso } from \"react-virtuoso\";\nimport ReplyItem from \"./ReplyItem\";\nimport ReplyListHeader from \"./ReplyListHeader\";\nimport ReplyListMenu from \"./ReplyListMenu\";\nimport ListFooter from \"../../../../../components/ListFooter\";\nimport {\n  DEFAULT_PAGE_OFFSET,\n  DEFAULT_PAGE_LIMIT,\n} from \"askent-common/src/constant\";\nimport { getHasNextPage } from \"../../../../../utils\";\n\ninterface Props {\n  questionId: string;\n  eventDetailData: EventDetailLiveQueryFieldsFragment | undefined;\n}\n\nconst ReplyList: React.FC<Props> = ({ questionId, eventDetailData }) => {\n  const [isScrolling, setIsScrolling] = React.useState(false);\n  const moreMenuState = React.useState<{\n    anchorEl: null | HTMLElement;\n    id: string;\n  }>({ anchorEl: null, id: \"\" });\n  const editContentInputRef = React.useRef<HTMLInputElement>(null);\n  const editContentIdsState = React.useState<Array<string>>([]);\n  const [\n    replyLiveQueryInput,\n    setReplyLiveQueryInput,\n  ] = React.useState<ReplyLiveQuerySubscriptionVariables>({\n    questionId,\n    limit: DEFAULT_PAGE_LIMIT,\n    offset: DEFAULT_PAGE_OFFSET,\n    order_by: { createdAt: Order_By.Desc },\n  });\n  const [\n    questionLiveQueryData,\n    setQuestionLiveQueryData,\n  ] = React.useState<QuestionLiveQueryFieldsFragment>();\n  const [replyLiveQueryData, setReplyLiveQueryData] = React.useState<\n    ReplyLiveQueryFieldsFragment[]\n  >([]);\n\n  const {loading}=useReplyLiveQuerySubscription({\n    variables: replyLiveQueryInput,\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data?.question.length) {\n        setQuestionLiveQueryData(subscriptionData.data?.question[0]);\n        setReplyLiveQueryData(subscriptionData.data?.question[0].replies);\n      }\n    },\n  });\n\n  const handleMoreOpen = (\n    event: React.MouseEvent<HTMLButtonElement>,\n    id: string\n  ) => {\n    moreMenuState[1]({ anchorEl: event.currentTarget, id });\n  };\n  const handleMoreClose = () => {\n    moreMenuState[1]({ anchorEl: null, id: \"\" });\n  };\n\n  const handleEditContentToggle = (id: string) => {\n    const findId = editContentIdsState[0].find((item) => item === id);\n    editContentIdsState[1](\n      findId\n        ? editContentIdsState[0].filter((item) => item !== id)\n        : editContentIdsState[0].concat([id])\n    );\n    handleMoreClose();\n    setTimeout(() => editContentInputRef.current?.focus(), 100);\n  };\n\n  const loadMore = () => {\n    if (\n      replyLiveQueryInput.offset + replyLiveQueryInput.limit <\n      (questionLiveQueryData?.replyCount || 0)\n    ) {\n      setReplyLiveQueryInput({\n        ...replyLiveQueryInput,\n        limit: replyLiveQueryInput.limit * 2,\n      });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Virtuoso\n        style={{ height: \"100%\", width: \"100%\", minHeight: 300 }}\n        totalCount={replyLiveQueryData.length}\n        isScrolling={(scrolling) => {\n          setIsScrolling(scrolling);\n        }}\n        endReached={loadMore}\n        itemContent={(index) => {\n          const reply: ReplyLiveQueryFieldsFragment = replyLiveQueryData[index];\n\n          return (\n            <ReplyItem\n              reply={reply}\n              handleMoreClick={handleMoreOpen}\n              editContent={editContentIdsState[0].includes(reply.id)}\n              handleEditContentToggle={handleEditContentToggle}\n              editContentInputRef={editContentInputRef}\n              isScrolling={isScrolling}\n            />\n          );\n        }}\n        components={{\n          Header: () => (\n            <ReplyListHeader\n              loading={loading}\n              isScrolling={isScrolling}\n              question={questionLiveQueryData}\n              eventDetailData={eventDetailData}\n            />\n          ),\n          Footer: () => (\n            <ListFooter\n              loading={loading}\n              hasNextPage={getHasNextPage(\n                replyLiveQueryInput.offset,\n                replyLiveQueryInput.limit,\n                questionLiveQueryData?.replyCount || 0\n              )}\n            />\n          ),\n        }}\n      />\n\n      <ReplyListMenu\n        moreMenuState={moreMenuState}\n        editContentInputRef={editContentInputRef}\n        editContentIdsState={editContentIdsState}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default ReplyList;\n","import React from \"react\";\nimport {\n  Box,\n  Typography,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  Avatar,\n  IconButton,\n} from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { InputBase, Switch } from \"formik-material-ui\";\nimport { Formik, Form, Field, FormikProps, FormikHelpers } from \"formik\";\nimport { FInputWithLabel } from \"../../../../../components/Form\";\nimport * as Yup from \"yup\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  REPLY_CONTENT_MAX_LENGTH,\n  USER_NAME_MAX_LENGTH,\n} from \"askent-common/src/constant\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  useCreateReplyMutation,\n  useUpdateUserMutation,\n  useMeQuery,\n} from \"../../../../../generated/graphqlHooks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    contentFormControl: {\n      width: \"100%\",\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      flexDirection: \"row\",\n    },\n    replyInput: {\n      flex: 1,\n      width: \"100%\",\n      fontSize: theme.typography.pxToRem(18),\n    },\n    helperTextBox: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    },\n    nameBox: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    nameInput: { width: 150, marginRight: theme.spacing(1) },\n    avatar: {\n      width: theme.spacing(4),\n      height: theme.spacing(4),\n      marginRight: theme.spacing(1),\n      fontSize: theme.typography.pxToRem(16),\n    },\n    anonymousSwitchLabel: {\n      marginLeft: \"unset\",\n      marginRight: \"unset\",\n    },\n    mobileSubmit: { width: \"100%\", marginTop: theme.spacing(1) },\n  })\n);\n\ntype ReplyValues = { content: string; name: string; anonymous: boolean };\ninterface Props {\n  className?: string;\n  questionId: string;\n  autoFocus?: boolean;\n  onAfterSubmit?: () => void;\n}\n\nconst ReplyForm: React.FC<Props> = ({\n  className,\n  questionId,\n  autoFocus = false,\n  onAfterSubmit,\n}) => {\n  const classes = useStyles();\n  const { formatMessage } = useIntl();\n  const { enqueueSnackbar } = useSnackbar();\n  const { data: userMeData } = useMeQuery();\n  const [createReplyMutation, { loading }] = useCreateReplyMutation();\n  const [\n    updateAudienceUserMutation,\n    { loading: updateUserLoading },\n  ] = useUpdateUserMutation();\n\n  const initialValues: ReplyValues = {\n    content: \"\",\n    name: userMeData?.me.name || \"\",\n    anonymous: Boolean(userMeData?.me.anonymous),\n  };\n  const handleSubmit: (\n    values: ReplyValues,\n    formikHelpers: FormikHelpers<ReplyValues>\n  ) => void | Promise<any> = async (values, formikBag) => {\n    if (\n      values.name !== userMeData?.me.name ||\n      values.anonymous !== userMeData?.me.anonymous\n    ) {\n      if (values.name !== userMeData?.me.name && !values.anonymous) {\n        // TODO: confirm.\n        console.log(\n          \"Change your name? You are about to change your name. All your previous questions or poll votes will use your new name. However, you will not be able to change it again for the next 1 hour.\"\n        );\n      }\n      await updateAudienceUserMutation({\n        variables: {\n          input:\n            values.anonymous !== userMeData?.me.anonymous && values.anonymous\n              ? { anonymous: true }\n              : { name: values.name, anonymous: values.anonymous },\n        },\n      });\n    }\n    await createReplyMutation({\n      variables: {\n        input: {\n          questionId,\n          content: values.content,\n          anonymous: Boolean(values.anonymous && values.name),\n        },\n      },\n    });\n    formikBag.resetForm();\n    onAfterSubmit && onAfterSubmit();\n  };\n\n  const handleSwitchClick = (currentAnonymous: boolean) => {\n    enqueueSnackbar(\n      currentAnonymous\n        ? formatMessage({\n            id: \"As\",\n            defaultMessage: \"As\",\n          }) + \" user\"\n        : formatMessage({\n            id: \"As anonymous\",\n            defaultMessage: \"As anonymous\",\n          }),\n      {\n        variant: \"success\",\n      }\n    );\n  };\n\n  const renderAvatarName = (formProps: FormikProps<ReplyValues>) => {\n    return formProps.values.anonymous ? (\n      <React.Fragment>\n        <Avatar\n          className={classes.avatar}\n          alt={formatMessage({\n            id: \"Anonymous\",\n            defaultMessage: \"Anonymous\",\n          })}\n        />\n        <Typography\n          variant=\"body1\"\n          color=\"textSecondary\"\n          className={classes.nameInput}\n        >\n          <FormattedMessage id=\"Anonymous\" defaultMessage=\"Anonymous\" />\n        </Typography>\n      </React.Fragment>\n    ) : (\n      <React.Fragment>\n        <Avatar\n          className={classes.avatar}\n          alt={formProps.values.name}\n          src={userMeData?.me.avatar||\"\"}\n        />\n        <Field\n          component={InputBase}\n          className={classes.nameInput}\n          name=\"name\"\n          placeholder={formatMessage({\n            id: \"Your_name(optional)\",\n            defaultMessage: \"Your name(optional)\",\n          })}\n          disabled={loading || updateUserLoading}\n        />\n      </React.Fragment>\n    );\n  };\n  const renderAnonymousSwitch = (formProps: FormikProps<ReplyValues>) => {\n    return (\n      formProps.values.name && (\n        <FormControlLabel\n          className={classes.anonymousSwitchLabel}\n          labelPlacement=\"end\"\n          control={\n            <Field\n              component={Switch}\n              name=\"anonymous\"\n              type=\"checkbox\"\n              size=\"small\"\n              onClick={() => handleSwitchClick(formProps.values.anonymous)}\n            />\n          }\n          label={\n            <Typography\n              variant=\"body2\"\n              color={\n                formProps.values.anonymous ? \"textPrimary\" : \"textSecondary\"\n              }\n            >\n              <FormattedMessage\n                id=\"As anonymous\"\n                defaultMessage=\"As anonymous\"\n              />\n            </Typography>\n          }\n        />\n      )\n    );\n  };\n  const renderSubmitButton = (formProps: FormikProps<ReplyValues>) => {\n    return (\n      <IconButton\n        color=\"primary\"\n        type=\"submit\"\n        title={formatMessage({ id: \"Send\", defaultMessage: \"Send\" })}\n        disabled={\n          !formProps.values.content.trim() || loading || updateUserLoading\n        }\n      >\n        <SendIcon />\n      </IconButton>\n    );\n  };\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={initialValues}\n      validationSchema={Yup.object({\n        content: Yup.string().max(REPLY_CONTENT_MAX_LENGTH).required(),\n        name: Yup.string().max(USER_NAME_MAX_LENGTH),\n      })}\n      onSubmit={handleSubmit}\n    >\n      {(formProps) => (\n        <Form className={className}>\n          <FormControl className={classes.contentFormControl}>\n            <FInputWithLabel\n              autoFocus={autoFocus}\n              multiline\n              minRows={1}\n              maxRows={5}\n              className={classes.replyInput}\n              size=\"small\"\n              name=\"content\"\n              label={formatMessage({\n                id: \"Type_your_reply\",\n                defaultMessage: \"Type your reply\",\n              })}\n              disabled={loading || updateUserLoading}\n            />\n          </FormControl>\n          <Box className={classes.helperTextBox}>\n            <FormHelperText\n              error={Boolean(\n                (formProps.touched.content && formProps.errors.content) ||\n                  (formProps.touched.name && formProps.errors.name)\n              )}\n            >\n              {formProps.errors.content || formProps.errors.name}\n            </FormHelperText>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {REPLY_CONTENT_MAX_LENGTH -\n                formProps.values.content.length +\n                \" / \" +\n                REPLY_CONTENT_MAX_LENGTH}\n            </Typography>\n          </Box>\n          <Box display=\"flex\" justifyContent=\"space-between\">\n            <Box className={classes.nameBox}>\n              {renderAvatarName(formProps)}\n              {renderAnonymousSwitch(formProps)}\n            </Box>\n            {renderSubmitButton(formProps)}\n          </Box>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default ReplyForm;\n","import React from \"react\";\nimport { Dialog, DialogContent } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { FormattedMessage } from \"react-intl\";\nimport DialogTitleWithClose from \"../../../../../components/DialogTitleWithClose\";\nimport ReplyList from \"./ReplyList\";\nimport ReplyForm from \"./ReplyForm\";\nimport { EventDetailLiveQueryFieldsFragment } from \"../../../../../generated/hasuraHooks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {},\n    form: { marginTop: theme.spacing(1) },\n  })\n);\n\nexport type ReplyDialogStateType = {\n  open: boolean;\n  questionId: string;\n};\n\nexport interface Props {\n  replyDialogState: [\n    ReplyDialogStateType,\n    React.Dispatch<React.SetStateAction<ReplyDialogStateType>>\n  ];\n  eventDetailData: EventDetailLiveQueryFieldsFragment | undefined;\n}\n\nconst ReplyDialog: React.FC<Props> = ({\n  replyDialogState,\n  eventDetailData,\n}) => {\n  const classes = useStyles();\n  const [replyDialog, setReplyDialog] = replyDialogState;\n  const handleClose = () => {\n    setReplyDialog(Object.assign({}, replyDialog, { open: false }));\n  };\n  const onExited = () => {\n    setReplyDialog({ open: false, questionId: \"\" });\n  };\n\n  return (\n    <Dialog\n      scroll={\"body\"}\n      open={replyDialog.open}\n      onClose={handleClose}\n      TransitionProps={{ onExited }}\n      fullWidth\n    >\n      <DialogTitleWithClose\n        title={<FormattedMessage id=\"Reply\" defaultMessage=\"Reply\" />}\n        onClose={handleClose}\n      />\n      <DialogContent className={classes.content}>\n        <ReplyList\n          questionId={replyDialog.questionId}\n          eventDetailData={eventDetailData}\n        />\n        <ReplyForm\n          className={classes.form}\n          questionId={replyDialog.questionId}\n          autoFocus\n        />\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default ReplyDialog;\n","import React from \"react\";\nimport {\n  useQuestionLiveQuerySubscription,\n  QuestionLiveQueryFieldsFragment,\n  QuestionLiveQuerySubscriptionVariables,\n  useQuestionCountLiveQuerySubscription,\n  EventDetailLiveQueryFieldsFragment,\n} from \"../../../../generated/hasuraHooks\";\nimport { Virtuoso } from \"react-virtuoso\";\nimport QuestionItem from \"./QuestionItem\";\nimport QuestionItemMenu from \"./QuestionItemMenu\";\nimport ReplyDialog from \"./reply/ReplyDialog\";\nimport ListFooter from \"../../../../components/ListFooter\";\nimport { QuestionQueryStateType } from \"./ActionRight\";\nimport { getHasNextPage } from \"../../../../utils\";\n\ninterface Props {\n  eventDetailData: EventDetailLiveQueryFieldsFragment | undefined;\n  questionQueryState: [\n    QuestionQueryStateType,\n    React.Dispatch<React.SetStateAction<QuestionQueryStateType>>\n  ];\n  questionQueryInput: QuestionLiveQuerySubscriptionVariables;\n}\n\nconst QuestionList: React.FC<Props> = ({\n  eventDetailData,\n  questionQueryState,\n  questionQueryInput,\n}) => {\n  const [isScrolling, setIsScrolling] = React.useState(false);\n  const moreMenuState = React.useState<{\n    anchorEl: null | HTMLElement;\n    id: string;\n  }>({ anchorEl: null, id: \"\" });\n  const editContentInputRef = React.useRef<HTMLInputElement>(null);\n  const editContentIdsState = React.useState<Array<string>>([]);\n  const replyDialogState = React.useState({ open: false, questionId: \"\" });\n  const [questionLiveQueryData, setQuestionLiveQueryData] = React.useState<\n    Array<QuestionLiveQueryFieldsFragment>\n  >([]);\n  const [questionCountLiveQueryData, setQuestionCountLiveQueryData] =\n    React.useState(0);\n  const hasNextPage = getHasNextPage(\n    questionQueryInput.offset,\n    questionQueryInput.limit,\n    questionCountLiveQueryData\n  );\n\n  const moreMenuContextQuestion = React.useMemo(\n    () => questionLiveQueryData.find((item) => item.id === moreMenuState[0].id),\n    [questionLiveQueryData, moreMenuState]\n  );\n\n  const { loading } = useQuestionLiveQuerySubscription({\n    variables: questionQueryInput,\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data?.question) {\n        setQuestionLiveQueryData(subscriptionData.data?.question);\n      }\n    },\n  });\n  useQuestionCountLiveQuerySubscription({\n    variables: { where: questionQueryInput.where },\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      setQuestionCountLiveQueryData(\n        subscriptionData.data?.question_aggregate.aggregate?.count || 0\n      );\n    },\n  });\n\n  const handleMoreOpen = (\n    event: React.MouseEvent<HTMLButtonElement>,\n    id: string\n  ) => {\n    moreMenuState[1]({ anchorEl: event.currentTarget, id });\n  };\n  const handleMoreClose = () => {\n    moreMenuState[1]({ anchorEl: null, id: \"\" });\n  };\n\n  const handleEditContentToggle = (id: string) => {\n    const findId = editContentIdsState[0].find((item) => item === id);\n    editContentIdsState[1](\n      findId\n        ? editContentIdsState[0].filter((item) => item !== id)\n        : editContentIdsState[0].concat([id])\n    );\n    handleMoreClose();\n    setTimeout(() => editContentInputRef.current?.focus(), 100);\n  };\n\n  const loadMore = () => {\n    if (hasNextPage) {\n      questionQueryState[1]({\n        ...questionQueryState[0],\n        limit: questionQueryState[0].limit * 2,\n      });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Virtuoso\n        style={{ height: \"100%\", width: \"100%\" }}\n        totalCount={questionLiveQueryData.length}\n        isScrolling={(scrolling) => {\n          setIsScrolling(scrolling);\n        }}\n        endReached={loadMore}\n        itemContent={(index) => {\n          const question: QuestionLiveQueryFieldsFragment =\n            questionLiveQueryData[index];\n\n          return (\n            <QuestionItem\n              question={question}\n              eventDetailData={eventDetailData}\n              handleMoreClick={handleMoreOpen}\n              editContent={editContentIdsState[0].includes(question.id)}\n              handleEditContentToggle={handleEditContentToggle}\n              editContentInputRef={editContentInputRef}\n              replyDialogState={replyDialogState}\n              isScrolling={isScrolling}\n            />\n          );\n        }}\n        components={{\n          Footer: () => (\n            <ListFooter loading={loading} hasNextPage={hasNextPage} />\n          ),\n        }}\n      />\n\n      <QuestionItemMenu\n        question={moreMenuContextQuestion}\n        moreMenuState={moreMenuState}\n        editContentInputRef={editContentInputRef}\n        editContentIdsState={editContentIdsState}\n        replyDialogState={replyDialogState}\n      />\n      <ReplyDialog\n        replyDialogState={replyDialogState}\n        eventDetailData={eventDetailData}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default QuestionList;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Typography, FormControlLabel, Switch } from \"@material-ui/core\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport {\n  useUpdateEventMutation,\n  useDeleteAllReviewQuestionsMutation,\n  usePublishAllReviewQuestionsMutation,\n} from \"../../../../generated/graphqlHooks\";\nimport Confirm from \"../../../../components/Confirm\";\nimport { EventDetailLiveQueryFieldsFragment } from \"../../../../generated/hasuraHooks\";\n\ninterface Props {\n  eventDetailData: EventDetailLiveQueryFieldsFragment | undefined;\n}\n\nconst ActionReview: React.FC<Props> = ({ eventDetailData }) => {\n  const { formatMessage } = useIntl();\n  const { id } = useParams<{ id: string }>();\n  const [updateEventMutation] = useUpdateEventMutation();\n  const [\n    deleteAllReviewQuestionsMutation,\n  ] = useDeleteAllReviewQuestionsMutation();\n  const [\n    publishAllReviewQuestionsMutation,\n  ] = usePublishAllReviewQuestionsMutation();\n  const [confirmModeration, setConfirmModeration] = React.useState(false);\n\n  const handleModerationChange = async () => {\n    if (eventDetailData?.moderation) {\n      setConfirmModeration(true);\n    } else {\n      await updateEventMutation({\n        variables: {\n          input: {\n            eventId: id,\n            moderation: true,\n          },\n        },\n      });\n    }\n  };\n  const handleDeleteAll = async () => {\n    await deleteAllReviewQuestionsMutation({\n      variables: { eventId: id },\n    });\n    await updateEventMutation({\n      variables: {\n        input: {\n          eventId: id,\n          moderation: false,\n        },\n      },\n    });\n    setConfirmModeration(false);\n  };\n  const handlePublishAll = async () => {\n    await publishAllReviewQuestionsMutation({\n      variables: { eventId: id },\n    });\n    await updateEventMutation({\n      variables: {\n        input: {\n          eventId: id,\n          moderation: false,\n        },\n      },\n    });\n    setConfirmModeration(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Typography color=\"textSecondary\">\n        <FormattedMessage id=\"ForReview\" defaultMessage=\"For review\" />\n      </Typography>\n      <FormControlLabel\n        labelPlacement=\"start\"\n        control={\n          <Switch\n            checked={Boolean(eventDetailData?.moderation)}\n            onChange={handleModerationChange}\n          />\n        }\n        label={formatMessage({\n          id: \"Moderation\",\n          defaultMessage: \"Moderation\",\n        })}\n      />\n\n      <Confirm\n        disableBackdropClick\n        disableEscapeKeyDown\n        contentText={formatMessage({\n          id: \"Publish_or_delete_all_unreview_questions?\",\n          defaultMessage: \"Publish or delete all unreview questions?\",\n        })}\n        open={confirmModeration}\n        cancelText={\n          <Typography color=\"error\" variant=\"subtitle1\">\n            <FormattedMessage id=\"Delete\" defaultMessage=\"Delete\" />\n          </Typography>\n        }\n        okText={\n          <Typography variant=\"subtitle1\">\n            <FormattedMessage id=\"Publish\" defaultMessage=\"Publish\" />\n          </Typography>\n        }\n        onCancel={handleDeleteAll}\n        onOk={handlePublishAll}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default ActionReview;\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { useIntl, FormattedMessage } from \"react-intl\";\nimport {\n  Box,\n  Menu,\n  MenuItem,\n  IconButton,\n  InputAdornment,\n  TextField,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport { QuestionFilter, QuestionOrder } from \"../../../../constant\";\nimport QuestionOrderMenu from \"../../../../components/QuestionOrderMenu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport SortIcon from \"@material-ui/icons/Sort\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    filterBox: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      width: 320,\n      cursor: \"pointer\",\n      padding: theme.spacing(0, 1),\n      borderRadius: `${theme.shape.borderRadius}px ${theme.shape.borderRadius}px 0 0`,\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[1],\n      \"& .arrowDown\": { color: theme.palette.text.secondary },\n    },\n    filterMenuList: { width: 320 },\n    searchAndSort: { display: \"flex\", alignItems: \"center\" },\n    iconButton: { width: 38, height: 38, padding: 8 },\n    searchInputRoot: { color: \"inherit\" },\n    searchInputInput: {\n      transition: theme.transitions.create(\"width\"),\n      [theme.breakpoints.up(\"sm\")]: {\n        width: 50,\n        \"&:focus\": {\n          width: 100,\n        },\n      },\n    },\n  })\n);\n\nconst getQuestionFilterLabel = (value: QuestionFilter) => {\n  switch (value) {\n    case QuestionFilter.Publish:\n      return <FormattedMessage id=\"Published\" defaultMessage=\"Published\" />;\n    case QuestionFilter.Archive:\n      return <FormattedMessage id=\"Archived\" defaultMessage=\"Archived\" />;\n    case QuestionFilter.Starred:\n      return <FormattedMessage id=\"Starred\" defaultMessage=\"Starred\" />;\n  }\n};\nexport type QuestionQueryStateType = {\n  filter: QuestionFilter;\n  searchString?: string;\n  limit: number;\n  offset: number;\n};\ninterface Props {\n  questionQueryState: [\n    QuestionQueryStateType,\n    React.Dispatch<React.SetStateAction<QuestionQueryStateType>>\n  ];\n  orderSelectedState: [\n    QuestionOrder,\n    React.Dispatch<React.SetStateAction<QuestionOrder>>\n  ];\n}\n\nconst ActionRight: React.FC<Props> = ({\n  questionQueryState,\n  orderSelectedState,\n}) => {\n  const classes = useStyles();\n  const { formatMessage } = useIntl();\n  const [filterAnchorEl, setFilterAnchorEl] =\n    React.useState<null | HTMLElement>(null);\n  const searchRef = React.useRef<HTMLInputElement>(null);\n  const orderMenuElState = React.useState<null | HTMLElement>(null);\n  const [queryState, setQueryState] = questionQueryState;\n\n  const handleFilterOpen = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setFilterAnchorEl(event.currentTarget);\n  };\n  const handleFilterClose = () => {\n    setFilterAnchorEl(null);\n  };\n  const handleFilterOptionClick = (value: QuestionFilter) => {\n    setQueryState({\n      ...queryState,\n      filter: value,\n    });\n    handleFilterClose();\n  };\n\n  const handleSearchClick = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    searchRef.current?.focus();\n  };\n  const handleSearchClear = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    setQueryState({ ...queryState, searchString: \"\" });\n  };\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQueryState({ ...queryState, searchString: event.target.value });\n  };\n\n  const handleOrderMenuOpen = (event: React.MouseEvent<HTMLButtonElement>) => {\n    orderMenuElState[1](event.currentTarget);\n  };\n\n  return (\n    <React.Fragment>\n      <Tooltip\n        arrow\n        placement=\"top\"\n        title={formatMessage({ id: \"Filter\", defaultMessage: \"Filter\" })}\n      >\n        <Box className={classes.filterBox} onClick={handleFilterOpen}>\n          <ArrowDropDownIcon className=\"arrowDown\" />\n          <Typography variant=\"body1\">\n            {getQuestionFilterLabel(queryState.filter)}\n          </Typography>\n        </Box>\n      </Tooltip>\n      <Box className={classes.searchAndSort}>\n        <TextField\n          inputRef={searchRef}\n          placeholder={formatMessage({\n            id: \"SEARCH\",\n            defaultMessage: \"Search\",\n          })}\n          InputProps={{\n            disableUnderline: true,\n            classes: {\n              root: classes.searchInputRoot,\n              input: classes.searchInputInput,\n            },\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                {queryState.searchString ? (\n                  <IconButton\n                    className={classes.iconButton}\n                    onClick={handleSearchClear}\n                  >\n                    <ClearIcon color=\"inherit\" fontSize=\"inherit\" />\n                  </IconButton>\n                ) : (\n                  <Tooltip\n                    title={formatMessage({\n                      id: \"Search\",\n                      defaultMessage: \"Search\",\n                    })}\n                  >\n                    <IconButton\n                      className={classes.iconButton}\n                      onClick={handleSearchClick}\n                    >\n                      <SearchIcon color=\"inherit\" fontSize=\"inherit\" />\n                    </IconButton>\n                  </Tooltip>\n                )}\n              </InputAdornment>\n            ),\n          }}\n          value={queryState.searchString}\n          onChange={handleSearchChange}\n        />\n        <Tooltip title={formatMessage({ id: \"Sort\", defaultMessage: \"Sort\" })}>\n          <IconButton\n            className={classes.iconButton}\n            onClick={handleOrderMenuOpen}\n          >\n            <SortIcon color=\"inherit\" fontSize=\"inherit\" />\n          </IconButton>\n        </Tooltip>\n      </Box>\n\n      <Menu\n        keepMounted\n        classes={{ list: classes.filterMenuList }}\n        anchorEl={filterAnchorEl}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        open={Boolean(filterAnchorEl)}\n        onClose={handleFilterClose}\n      >\n        {Object.values(QuestionFilter)\n          .filter((item) => item !== QuestionFilter.Review)\n          .map((filterItem, index) => (\n            <MenuItem\n              key={index}\n              selected={filterItem === queryState.filter}\n              onClick={(e) => handleFilterOptionClick(filterItem)}\n            >\n              {getQuestionFilterLabel(filterItem)}\n            </MenuItem>\n          ))}\n      </Menu>\n      <QuestionOrderMenu\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        menuElState={orderMenuElState}\n        orderSelectedState={orderSelectedState}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default ActionRight;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid, Paper, Box, Typography } from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { FormattedMessage } from \"react-intl\";\nimport {\n  EventDetailLiveQueryFieldsFragment,\n  QuestionLiveQuerySubscriptionVariables,\n} from \"../../../../generated/hasuraHooks\";\nimport QuestionList from \"./QuestionList\";\nimport ActionReview from \"./ActionReview\";\nimport ActionRight, { QuestionQueryStateType } from \"./ActionRight\";\nimport { QuestionFilter, QuestionOrder } from \"../../../../constant\";\nimport {\n  DEFAULT_PAGE_LIMIT,\n  DEFAULT_PAGE_OFFSET,\n} from \"askent-common/src/constant\";\nimport { getQuestionOrderByCondition } from \"../../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    questionsGrid: {\n      height: \"100%\",\n    },\n    gridItem: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: \"100%\",\n    },\n    listActions: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    },\n    gridItemPaper: {\n      flex: 1,\n      overflowX: \"hidden\",\n      overflowY: \"auto\",\n    },\n    rightPaper: {\n      borderRadius: `0 ${theme.shape.borderRadius}px ${theme.shape.borderRadius}px`,\n    },\n    moderationOffTips: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      height: \"100%\",\n    },\n  })\n);\n\ninterface Props {\n  eventDetailData: EventDetailLiveQueryFieldsFragment | undefined;\n}\n\nconst Questions: React.FC<Props> = ({ eventDetailData }) => {\n  const classes = useStyles();\n  const { id } = useParams<{ id: string }>();\n  const questionQueryState = React.useState<QuestionQueryStateType>({\n    filter: QuestionFilter.Publish,\n    searchString: \"\",\n    limit: DEFAULT_PAGE_LIMIT,\n    offset: DEFAULT_PAGE_OFFSET,\n  });\n  const questionReviewQueryState = React.useState<QuestionQueryStateType>({\n    filter: QuestionFilter.Review,\n    searchString: \"\",\n    limit: DEFAULT_PAGE_LIMIT,\n    offset: DEFAULT_PAGE_OFFSET,\n  });\n  const questionOrderSelectedState = React.useState(QuestionOrder.Popular);\n\n  const questionQueryInput: QuestionLiveQuerySubscriptionVariables = {\n    where: {\n      eventId: { _eq: id },\n      content: { _ilike: `%${questionQueryState[0].searchString}%` },\n      reviewStatus: { _eq: questionQueryState[0].filter },\n    },\n    limit: questionQueryState[0].limit,\n    offset: questionQueryState[0].offset,\n    order_by: getQuestionOrderByCondition(questionOrderSelectedState[0]),\n  };\n  const questionReviewQueryInput: QuestionLiveQuerySubscriptionVariables = {\n    where: {\n      eventId: { _eq: id },\n      reviewStatus: { _eq: questionReviewQueryState[0].filter },\n    },\n    limit: questionReviewQueryState[0].limit,\n    offset: questionReviewQueryState[0].offset,\n    order_by: getQuestionOrderByCondition(QuestionOrder.Recent),\n  };\n\n  return (\n    <Grid container spacing={3} className={classes.questionsGrid}>\n      <Grid item sm={6} className={classes.gridItem}>\n        <Box className={classes.listActions}>\n          <ActionReview eventDetailData={eventDetailData} />\n        </Box>\n        <Paper className={classes.gridItemPaper}>\n          {eventDetailData?.moderation ? (\n            <QuestionList\n              eventDetailData={eventDetailData}\n              questionQueryState={questionReviewQueryState}\n              questionQueryInput={questionReviewQueryInput}\n            />\n          ) : (\n            <Box className={classes.moderationOffTips}>\n              <Typography variant=\"h6\" align=\"center\" paragraph>\n                <FormattedMessage\n                  id=\"Moderation_is_off\"\n                  defaultMessage=\"Moderation is off\"\n                />\n              </Typography>\n              <Typography align=\"center\">\n                <FormattedMessage\n                  id=\"Incoming_questions_will_automatically_appear_live.\"\n                  defaultMessage=\"Incoming questions will automatically appear live.\"\n                />\n              </Typography>\n            </Box>\n          )}\n        </Paper>\n      </Grid>\n      <Grid item sm={6} className={classes.gridItem}>\n        <Box className={classes.listActions}>\n          <ActionRight\n            questionQueryState={questionQueryState}\n            orderSelectedState={questionOrderSelectedState}\n          />\n        </Box>\n        <Paper className={classes.gridItemPaper + \" \" + classes.rightPaper}>\n          <QuestionList\n            eventDetailData={eventDetailData}\n            questionQueryState={questionQueryState}\n            questionQueryInput={questionQueryInput}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Questions;\n"],"sourceRoot":""}