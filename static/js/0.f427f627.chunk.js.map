{"version":3,"sources":["../../../node_modules/@material-ui/core/esm/utils/useIsFocusVisible.js","../../../node_modules/@material-ui/core/esm/ButtonBase/Ripple.js","../../../node_modules/@material-ui/core/esm/ButtonBase/TouchRipple.js","../../../node_modules/@material-ui/core/esm/ButtonBase/ButtonBase.js","../../../node_modules/react-transition-group/esm/utils/ChildMapping.js","../../../node_modules/react-transition-group/esm/TransitionGroup.js"],"names":["hadKeyboardEvent","hadFocusVisibleRecently","hadFocusVisibleRecentlyTimeout","inputTypesWhitelist","text","search","url","tel","email","password","number","date","month","week","time","datetime","handleKeyDown","event","metaKey","altKey","ctrlKey","handlePointerDown","handleVisibilityChange","this","visibilityState","isFocusVisible","target","matches","error","node","type","tagName","readOnly","isContentEditable","focusTriggersKeyboardModality","handleBlurVisible","window","clearTimeout","setTimeout","useIsFocusVisible","onBlurVisible","ref","React","instance","doc","ReactDOM","ownerDocument","addEventListener","useEnhancedEffect","Ripple","props","classes","_props$pulsate","pulsate","rippleX","rippleY","rippleSize","inProp","in","_props$onExited","onExited","timeout","_React$useState","leaving","setLeaving","rippleClassName","clsx","ripple","rippleVisible","ripplePulsate","rippleStyles","width","height","top","left","childClassName","child","childLeaving","childPulsate","handleExited","useEventCallback","timeoutId","className","style","TouchRipple","_props$center","center","centerProp","other","_objectWithoutProperties","ripples","setRipples","nextKey","rippleCallback","current","ignoringMouseDown","startTimer","startTimerCommit","container","startCommit","params","cb","oldRipples","concat","_toConsumableArray","key","start","arguments","length","undefined","options","_options$pulsate","_options$center","_options$fakeElement","fakeElement","element","rect","getBoundingClientRect","clientX","clientY","touches","Math","round","_ref","sqrt","pow","sizeX","max","abs","clientWidth","sizeY","clientHeight","stop","persist","slice","_extends","root","TransitionGroup","component","exit","withStyles","theme","overflow","pointerEvents","position","zIndex","right","bottom","borderRadius","opacity","transform","animation","transitions","easing","easeInOut","animationDuration","duration","shorter","display","backgroundColor","flip","name","ButtonBase","action","buttonRefProp","buttonRef","_props$centerRipple","centerRipple","children","_props$component","_props$disabled","disabled","_props$disableRipple","disableRipple","_props$disableTouchRi","disableTouchRipple","_props$focusRipple","focusRipple","focusVisibleClassName","onBlur","onClick","onFocus","onFocusVisible","onKeyDown","onKeyUp","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","onDragLeave","_props$tabIndex","tabIndex","TouchRippleProps","_props$type","rippleRef","focusVisible","setFocusVisible","_useIsFocusVisible","focusVisibleRef","useRippleHandler","rippleAction","eventCallback","skipRippleAction","focus","handleMouseDown","handleDragLeave","handleMouseUp","handleMouseLeave","preventDefault","handleTouchStart","handleTouchEnd","handleTouchMove","handleBlur","handleFocus","currentTarget","isNonNativeButton","button","href","keydownRef","handleKeyUp","defaultPrevented","ComponentProp","buttonProps","role","handleUserRef","useForkRef","handleOwnRef","handleRef","_React$useState2","mountedState","setMountedState","enableTouchRipple","alignItems","justifyContent","WebkitTapHighlightColor","outline","border","margin","padding","cursor","userSelect","verticalAlign","textDecoration","color","borderStyle","colorAdjust","getChildMapping","mapFn","result","Object","create","Children","map","c","forEach","isValidElement","mapper","getProp","prop","getNextChildMapping","nextProps","prevChildMapping","nextChildMapping","prev","next","getValueForKey","i","nextKeysPending","pendingKeys","prevKey","push","childMapping","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","cloneElement","bind","enter","values","obj","k","_React$Component","context","_this","call","_assertThisInitialized","state","contextValue","isMounting","firstRender","_inheritsLoose","_proto","prototype","componentDidMount","mounted","setState","componentWillUnmount","getDerivedStateFromProps","appear","currentChildMapping","render","_this$props","Component","childFactory","_objectWithoutPropertiesLoose","createElement","TransitionGroupContext","Provider","value","propTypes","defaultProps"],"mappings":"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","file":"static/js/0.f427f627.chunk.js","sourcesContent":["// based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nvar hadKeyboardEvent = true;\nvar hadFocusVisibleRecently = false;\nvar hadFocusVisibleRecentlyTimeout = null;\nvar inputTypesWhitelist = {\n  text: true,\n  search: true,\n  url: true,\n  tel: true,\n  email: true,\n  password: true,\n  number: true,\n  date: true,\n  month: true,\n  week: true,\n  time: true,\n  datetime: true,\n  'datetime-local': true\n};\n/**\n * Computes whether the given element should automatically trigger the\n * `focus-visible` class being added, i.e. whether it should always match\n * `:focus-visible` when focused.\n * @param {Element} node\n * @return {boolean}\n */\n\nfunction focusTriggersKeyboardModality(node) {\n  var type = node.type,\n      tagName = node.tagName;\n\n  if (tagName === 'INPUT' && inputTypesWhitelist[type] && !node.readOnly) {\n    return true;\n  }\n\n  if (tagName === 'TEXTAREA' && !node.readOnly) {\n    return true;\n  }\n\n  if (node.isContentEditable) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * Keep track of our keyboard modality state with `hadKeyboardEvent`.\n * If the most recent user interaction was via the keyboard;\n * and the key press did not include a meta, alt/option, or control key;\n * then the modality is keyboard. Otherwise, the modality is not keyboard.\n * @param {KeyboardEvent} event\n */\n\n\nfunction handleKeyDown(event) {\n  if (event.metaKey || event.altKey || event.ctrlKey) {\n    return;\n  }\n\n  hadKeyboardEvent = true;\n}\n/**\n * If at any point a user clicks with a pointing device, ensure that we change\n * the modality away from keyboard.\n * This avoids the situation where a user presses a key on an already focused\n * element, and then clicks on a different element, focusing it with a\n * pointing device, while we still think we're in keyboard modality.\n */\n\n\nfunction handlePointerDown() {\n  hadKeyboardEvent = false;\n}\n\nfunction handleVisibilityChange() {\n  if (this.visibilityState === 'hidden') {\n    // If the tab becomes active again, the browser will handle calling focus\n    // on the element (Safari actually calls it twice).\n    // If this tab change caused a blur on an element with focus-visible,\n    // re-apply the class when the user switches back to the tab.\n    if (hadFocusVisibleRecently) {\n      hadKeyboardEvent = true;\n    }\n  }\n}\n\nfunction prepare(doc) {\n  doc.addEventListener('keydown', handleKeyDown, true);\n  doc.addEventListener('mousedown', handlePointerDown, true);\n  doc.addEventListener('pointerdown', handlePointerDown, true);\n  doc.addEventListener('touchstart', handlePointerDown, true);\n  doc.addEventListener('visibilitychange', handleVisibilityChange, true);\n}\n\nexport function teardown(doc) {\n  doc.removeEventListener('keydown', handleKeyDown, true);\n  doc.removeEventListener('mousedown', handlePointerDown, true);\n  doc.removeEventListener('pointerdown', handlePointerDown, true);\n  doc.removeEventListener('touchstart', handlePointerDown, true);\n  doc.removeEventListener('visibilitychange', handleVisibilityChange, true);\n}\n\nfunction isFocusVisible(event) {\n  var target = event.target;\n\n  try {\n    return target.matches(':focus-visible');\n  } catch (error) {} // browsers not implementing :focus-visible will throw a SyntaxError\n  // we use our own heuristic for those browsers\n  // rethrow might be better if it's not the expected error but do we really\n  // want to crash if focus-visible malfunctioned?\n  // no need for validFocusTarget check. the user does that by attaching it to\n  // focusable events only\n\n\n  return hadKeyboardEvent || focusTriggersKeyboardModality(target);\n}\n/**\n * Should be called if a blur event is fired on a focus-visible element\n */\n\n\nfunction handleBlurVisible() {\n  // To detect a tab/window switch, we look for a blur event followed\n  // rapidly by a visibility change.\n  // If we don't see a visibility change within 100ms, it's probably a\n  // regular focus change.\n  hadFocusVisibleRecently = true;\n  window.clearTimeout(hadFocusVisibleRecentlyTimeout);\n  hadFocusVisibleRecentlyTimeout = window.setTimeout(function () {\n    hadFocusVisibleRecently = false;\n  }, 100);\n}\n\nexport default function useIsFocusVisible() {\n  var ref = React.useCallback(function (instance) {\n    var node = ReactDOM.findDOMNode(instance);\n\n    if (node != null) {\n      prepare(node.ownerDocument);\n    }\n  }, []);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(isFocusVisible);\n  }\n\n  return {\n    isFocusVisible: isFocusVisible,\n    onBlurVisible: handleBlurVisible,\n    ref: ref\n  };\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useEventCallback from '../utils/useEventCallback';\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * @ignore - internal component.\n */\n\nfunction Ripple(props) {\n  var classes = props.classes,\n      _props$pulsate = props.pulsate,\n      pulsate = _props$pulsate === void 0 ? false : _props$pulsate,\n      rippleX = props.rippleX,\n      rippleY = props.rippleY,\n      rippleSize = props.rippleSize,\n      inProp = props.in,\n      _props$onExited = props.onExited,\n      onExited = _props$onExited === void 0 ? function () {} : _props$onExited,\n      timeout = props.timeout;\n\n  var _React$useState = React.useState(false),\n      leaving = _React$useState[0],\n      setLeaving = _React$useState[1];\n\n  var rippleClassName = clsx(classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate);\n  var rippleStyles = {\n    width: rippleSize,\n    height: rippleSize,\n    top: -(rippleSize / 2) + rippleY,\n    left: -(rippleSize / 2) + rippleX\n  };\n  var childClassName = clsx(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate);\n  var handleExited = useEventCallback(onExited); // Ripple is used for user feedback (e.g. click or press) so we want to apply styles with the highest priority\n\n  useEnhancedEffect(function () {\n    if (!inProp) {\n      // react-transition-group#onExit\n      setLeaving(true); // react-transition-group#onExited\n\n      var timeoutId = setTimeout(handleExited, timeout);\n      return function () {\n        clearTimeout(timeoutId);\n      };\n    }\n\n    return undefined;\n  }, [handleExited, inProp, timeout]);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: rippleClassName,\n    style: rippleStyles\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: childClassName\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Ripple.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.\n   */\n  pulsate: PropTypes.bool,\n\n  /**\n   * Diameter of the ripple.\n   */\n  rippleSize: PropTypes.number,\n\n  /**\n   * Horizontal position of the ripple center.\n   */\n  rippleX: PropTypes.number,\n\n  /**\n   * Vertical position of the ripple center.\n   */\n  rippleY: PropTypes.number,\n\n  /**\n   * exit delay\n   */\n  timeout: PropTypes.number.isRequired\n} : void 0;\nexport default Ripple;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Ripple from './Ripple';\nvar DURATION = 550;\nexport var DELAY_RIPPLE = 80;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      zIndex: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit'\n    },\n\n    /* Styles applied to the internal `Ripple` components `ripple` class. */\n    ripple: {\n      opacity: 0,\n      position: 'absolute'\n    },\n\n    /* Styles applied to the internal `Ripple` components `rippleVisible` class. */\n    rippleVisible: {\n      opacity: 0.3,\n      transform: 'scale(1)',\n      animation: \"$enter \".concat(DURATION, \"ms \").concat(theme.transitions.easing.easeInOut)\n    },\n\n    /* Styles applied to the internal `Ripple` components `ripplePulsate` class. */\n    ripplePulsate: {\n      animationDuration: \"\".concat(theme.transitions.duration.shorter, \"ms\")\n    },\n\n    /* Styles applied to the internal `Ripple` components `child` class. */\n    child: {\n      opacity: 1,\n      display: 'block',\n      width: '100%',\n      height: '100%',\n      borderRadius: '50%',\n      backgroundColor: 'currentColor'\n    },\n\n    /* Styles applied to the internal `Ripple` components `childLeaving` class. */\n    childLeaving: {\n      opacity: 0,\n      animation: \"$exit \".concat(DURATION, \"ms \").concat(theme.transitions.easing.easeInOut)\n    },\n\n    /* Styles applied to the internal `Ripple` components `childPulsate` class. */\n    childPulsate: {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      animation: \"$pulsate 2500ms \".concat(theme.transitions.easing.easeInOut, \" 200ms infinite\")\n    },\n    '@keyframes enter': {\n      '0%': {\n        transform: 'scale(0)',\n        opacity: 0.1\n      },\n      '100%': {\n        transform: 'scale(1)',\n        opacity: 0.3\n      }\n    },\n    '@keyframes exit': {\n      '0%': {\n        opacity: 1\n      },\n      '100%': {\n        opacity: 0\n      }\n    },\n    '@keyframes pulsate': {\n      '0%': {\n        transform: 'scale(1)'\n      },\n      '50%': {\n        transform: 'scale(0.92)'\n      },\n      '100%': {\n        transform: 'scale(1)'\n      }\n    }\n  };\n};\n/**\n * @ignore - internal component.\n *\n * TODO v5: Make private\n */\n\nvar TouchRipple = /*#__PURE__*/React.forwardRef(function TouchRipple(props, ref) {\n  var _props$center = props.center,\n      centerProp = _props$center === void 0 ? false : _props$center,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"center\", \"classes\", \"className\"]);\n\n  var _React$useState = React.useState([]),\n      ripples = _React$useState[0],\n      setRipples = _React$useState[1];\n\n  var nextKey = React.useRef(0);\n  var rippleCallback = React.useRef(null);\n  React.useEffect(function () {\n    if (rippleCallback.current) {\n      rippleCallback.current();\n      rippleCallback.current = null;\n    }\n  }, [ripples]); // Used to filter out mouse emulated events on mobile.\n\n  var ignoringMouseDown = React.useRef(false); // We use a timer in order to only show the ripples for touch \"click\" like events.\n  // We don't want to display the ripple for touch scroll events.\n\n  var startTimer = React.useRef(null); // This is the hook called once the previous timeout is ready.\n\n  var startTimerCommit = React.useRef(null);\n  var container = React.useRef(null);\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(startTimer.current);\n    };\n  }, []);\n  var startCommit = React.useCallback(function (params) {\n    var pulsate = params.pulsate,\n        rippleX = params.rippleX,\n        rippleY = params.rippleY,\n        rippleSize = params.rippleSize,\n        cb = params.cb;\n    setRipples(function (oldRipples) {\n      return [].concat(_toConsumableArray(oldRipples), [/*#__PURE__*/React.createElement(Ripple, {\n        key: nextKey.current,\n        classes: classes,\n        timeout: DURATION,\n        pulsate: pulsate,\n        rippleX: rippleX,\n        rippleY: rippleY,\n        rippleSize: rippleSize\n      })]);\n    });\n    nextKey.current += 1;\n    rippleCallback.current = cb;\n  }, [classes]);\n  var start = React.useCallback(function () {\n    var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var cb = arguments.length > 2 ? arguments[2] : undefined;\n    var _options$pulsate = options.pulsate,\n        pulsate = _options$pulsate === void 0 ? false : _options$pulsate,\n        _options$center = options.center,\n        center = _options$center === void 0 ? centerProp || options.pulsate : _options$center,\n        _options$fakeElement = options.fakeElement,\n        fakeElement = _options$fakeElement === void 0 ? false : _options$fakeElement;\n\n    if (event.type === 'mousedown' && ignoringMouseDown.current) {\n      ignoringMouseDown.current = false;\n      return;\n    }\n\n    if (event.type === 'touchstart') {\n      ignoringMouseDown.current = true;\n    }\n\n    var element = fakeElement ? null : container.current;\n    var rect = element ? element.getBoundingClientRect() : {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0\n    }; // Get the size of the ripple\n\n    var rippleX;\n    var rippleY;\n    var rippleSize;\n\n    if (center || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {\n      rippleX = Math.round(rect.width / 2);\n      rippleY = Math.round(rect.height / 2);\n    } else {\n      var _ref = event.touches ? event.touches[0] : event,\n          clientX = _ref.clientX,\n          clientY = _ref.clientY;\n\n      rippleX = Math.round(clientX - rect.left);\n      rippleY = Math.round(clientY - rect.top);\n    }\n\n    if (center) {\n      rippleSize = Math.sqrt((2 * Math.pow(rect.width, 2) + Math.pow(rect.height, 2)) / 3); // For some reason the animation is broken on Mobile Chrome if the size if even.\n\n      if (rippleSize % 2 === 0) {\n        rippleSize += 1;\n      }\n    } else {\n      var sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;\n      var sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;\n      rippleSize = Math.sqrt(Math.pow(sizeX, 2) + Math.pow(sizeY, 2));\n    } // Touche devices\n\n\n    if (event.touches) {\n      // check that this isn't another touchstart due to multitouch\n      // otherwise we will only clear a single timer when unmounting while two\n      // are running\n      if (startTimerCommit.current === null) {\n        // Prepare the ripple effect.\n        startTimerCommit.current = function () {\n          startCommit({\n            pulsate: pulsate,\n            rippleX: rippleX,\n            rippleY: rippleY,\n            rippleSize: rippleSize,\n            cb: cb\n          });\n        }; // Delay the execution of the ripple effect.\n\n\n        startTimer.current = setTimeout(function () {\n          if (startTimerCommit.current) {\n            startTimerCommit.current();\n            startTimerCommit.current = null;\n          }\n        }, DELAY_RIPPLE); // We have to make a tradeoff with this value.\n      }\n    } else {\n      startCommit({\n        pulsate: pulsate,\n        rippleX: rippleX,\n        rippleY: rippleY,\n        rippleSize: rippleSize,\n        cb: cb\n      });\n    }\n  }, [centerProp, startCommit]);\n  var pulsate = React.useCallback(function () {\n    start({}, {\n      pulsate: true\n    });\n  }, [start]);\n  var stop = React.useCallback(function (event, cb) {\n    clearTimeout(startTimer.current); // The touch interaction occurs too quickly.\n    // We still want to show ripple effect.\n\n    if (event.type === 'touchend' && startTimerCommit.current) {\n      event.persist();\n      startTimerCommit.current();\n      startTimerCommit.current = null;\n      startTimer.current = setTimeout(function () {\n        stop(event, cb);\n      });\n      return;\n    }\n\n    startTimerCommit.current = null;\n    setRipples(function (oldRipples) {\n      if (oldRipples.length > 0) {\n        return oldRipples.slice(1);\n      }\n\n      return oldRipples;\n    });\n    rippleCallback.current = cb;\n  }, []);\n  React.useImperativeHandle(ref, function () {\n    return {\n      pulsate: pulsate,\n      start: start,\n      stop: stop\n    };\n  }, [pulsate, start, stop]);\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: clsx(classes.root, className),\n    ref: container\n  }, other), /*#__PURE__*/React.createElement(TransitionGroup, {\n    component: null,\n    exit: true\n  }, ripples));\n});\nprocess.env.NODE_ENV !== \"production\" ? TouchRipple.propTypes = {\n  /**\n   * If `true`, the ripple starts at the center of the component\n   * rather than at the point of interaction.\n   */\n  center: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiTouchRipple'\n})( /*#__PURE__*/React.memo(TouchRipple));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef, refType } from '@material-ui/utils';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport withStyles from '../styles/withStyles';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport TouchRipple from './TouchRipple';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    textDecoration: 'none',\n    // So we take precedent over the style of a native <a /> element.\n    color: 'inherit',\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$disabled': {\n      pointerEvents: 'none',\n      // Disable link interactions\n      cursor: 'default'\n    },\n    '@media print': {\n      colorAdjust: 'exact'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Pseudo-class applied to the root element if keyboard focused. */\n  focusVisible: {}\n};\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\n\nvar ButtonBase = /*#__PURE__*/React.forwardRef(function ButtonBase(props, ref) {\n  var action = props.action,\n      buttonRefProp = props.buttonRef,\n      _props$centerRipple = props.centerRipple,\n      centerRipple = _props$centerRipple === void 0 ? false : _props$centerRipple,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableRipple = props.disableRipple,\n      disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n      _props$disableTouchRi = props.disableTouchRipple,\n      disableTouchRipple = _props$disableTouchRi === void 0 ? false : _props$disableTouchRi,\n      _props$focusRipple = props.focusRipple,\n      focusRipple = _props$focusRipple === void 0 ? false : _props$focusRipple,\n      focusVisibleClassName = props.focusVisibleClassName,\n      onBlur = props.onBlur,\n      onClick = props.onClick,\n      onFocus = props.onFocus,\n      onFocusVisible = props.onFocusVisible,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      onMouseDown = props.onMouseDown,\n      onMouseLeave = props.onMouseLeave,\n      onMouseUp = props.onMouseUp,\n      onTouchEnd = props.onTouchEnd,\n      onTouchMove = props.onTouchMove,\n      onTouchStart = props.onTouchStart,\n      onDragLeave = props.onDragLeave,\n      _props$tabIndex = props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n      TouchRippleProps = props.TouchRippleProps,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      other = _objectWithoutProperties(props, [\"action\", \"buttonRef\", \"centerRipple\", \"children\", \"classes\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"onBlur\", \"onClick\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"onDragLeave\", \"tabIndex\", \"TouchRippleProps\", \"type\"]);\n\n  var buttonRef = React.useRef(null);\n\n  function getButtonNode() {\n    // #StrictMode ready\n    return ReactDOM.findDOMNode(buttonRef.current);\n  }\n\n  var rippleRef = React.useRef(null);\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  React.useImperativeHandle(action, function () {\n    return {\n      focusVisible: function focusVisible() {\n        setFocusVisible(true);\n        buttonRef.current.focus();\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (focusVisible && focusRipple && !disableRipple) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible]);\n\n  function useRippleHandler(rippleAction, eventCallback) {\n    var skipRippleAction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : disableTouchRipple;\n    return useEventCallback(function (event) {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n\n      var ignore = skipRippleAction;\n\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n\n      return true;\n    });\n  }\n\n  var handleMouseDown = useRippleHandler('start', onMouseDown);\n  var handleDragLeave = useRippleHandler('stop', onDragLeave);\n  var handleMouseUp = useRippleHandler('stop', onMouseUp);\n  var handleMouseLeave = useRippleHandler('stop', function (event) {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  var handleTouchStart = useRippleHandler('start', onTouchStart);\n  var handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  var handleTouchMove = useRippleHandler('stop', onTouchMove);\n  var handleBlur = useRippleHandler('stop', function (event) {\n    if (focusVisible) {\n      onBlurVisible(event);\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  var handleFocus = useEventCallback(function (event) {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n\n  var isNonNativeButton = function isNonNativeButton() {\n    var button = getButtonNode();\n    return component && component !== 'button' && !(button.tagName === 'A' && button.href);\n  };\n  /**\n   * IE 11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n\n\n  var keydownRef = React.useRef(false);\n  var handleKeyDown = useEventCallback(function (event) {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      event.persist();\n      rippleRef.current.stop(event, function () {\n        rippleRef.current.start(event);\n      });\n    }\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {\n      event.preventDefault();\n\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  var handleKeyUp = useEventCallback(function (event) {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      event.persist();\n      rippleRef.current.stop(event, function () {\n        rippleRef.current.pulsate(event);\n      });\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n      onClick(event);\n    }\n  });\n  var ComponentProp = component;\n\n  if (ComponentProp === 'button' && other.href) {\n    ComponentProp = 'a';\n  }\n\n  var buttonProps = {};\n\n  if (ComponentProp === 'button') {\n    buttonProps.type = type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (ComponentProp !== 'a' || !other.href) {\n      buttonProps.role = 'button';\n    }\n\n    buttonProps['aria-disabled'] = disabled;\n  }\n\n  var handleUserRef = useForkRef(buttonRefProp, ref);\n  var handleOwnRef = useForkRef(focusVisibleRef, buttonRef);\n  var handleRef = useForkRef(handleUserRef, handleOwnRef);\n\n  var _React$useState2 = React.useState(false),\n      mountedState = _React$useState2[0],\n      setMountedState = _React$useState2[1];\n\n  React.useEffect(function () {\n    setMountedState(true);\n  }, []);\n  var enableTouchRipple = mountedState && !disableRipple && !disabled;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (enableTouchRipple && !rippleRef.current) {\n        console.error(['Material-UI: The `component` prop provided to ButtonBase is invalid.', 'Please make sure the children prop is rendered in this custom component.'].join('\\n'));\n      }\n    }, [enableTouchRipple]);\n  }\n\n  return /*#__PURE__*/React.createElement(ComponentProp, _extends({\n    className: clsx(classes.root, className, focusVisible && [classes.focusVisible, focusVisibleClassName], disabled && classes.disabled),\n    onBlur: handleBlur,\n    onClick: onClick,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseLeave,\n    onMouseUp: handleMouseUp,\n    onDragLeave: handleDragLeave,\n    onTouchEnd: handleTouchEnd,\n    onTouchMove: handleTouchMove,\n    onTouchStart: handleTouchStart,\n    ref: handleRef,\n    tabIndex: disabled ? -1 : tabIndex\n  }, buttonProps, other), children, enableTouchRipple ?\n  /*#__PURE__*/\n\n  /* TouchRipple is only needed client-side, x2 boost on the server. */\n  React.createElement(TouchRipple, _extends({\n    ref: rippleRef,\n    center: centerRipple\n  }, TouchRippleProps)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: refType,\n\n  /**\n   * @ignore\n   *\n   * Use that prop to pass a ref to the native button component.\n   * @deprecated Use `ref` instead.\n   */\n  buttonRef: deprecatedPropType(refType, 'Use `ref` instead.'),\n\n  /**\n   * If `true`, the ripples will be centered.\n   * They won't start at the cursor interaction position.\n   */\n  centerRipple: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the base button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the touch ripple effect will be disabled.\n   */\n  disableTouchRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   */\n  focusRipple: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  href: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButtonBase'\n})(ButtonBase);","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;"],"sourceRoot":""}