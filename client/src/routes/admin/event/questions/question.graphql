fragment PagedQuestionFields on PagedQuestion {
  first
  skip
  totalCount
  hasNextPage
  list {
    ...QuestionFields
  }
}
fragment QuestionFields on Question {
  id
  updatedAt
  voteCount
  content
  reviewStatus
  star
  top
  author {
    id
    name
  }
}

query QuestionsByEvent(
  $eventId: ID!
  $where: QuestionWhereInput
  $pagination: PaginationInputType!
  $orderBy: QuestionOrderByInput
) {
  questionsByEvent(
    eventId: $eventId
    where: $where
    pagination: $pagination
    orderBy: $orderBy
  ) {
    ...PagedQuestionFields
  }
}

mutation DeleteQuestion($questionId: ID!) {
  deleteQuestion(questionId: $questionId) {
    id
  }
}

mutation DeleteAllReviewQuestions($eventId: ID!) {
  deleteAllReviewQuestions(eventId: $eventId)
}

mutation PublishAllReviewQuestions($eventId: ID!) {
  publishAllReviewQuestions(eventId: $eventId)
}

mutation UpdateQuestion($input: UpdateQuestionInputType!) {
  updateQuestion(input: $input) {
    ...QuestionFields
  }
}

subscription QuestionAdded($eventId: ID!, $role: RoleName!) {
  questionAdded(eventId: $eventId, role: $role) {
    ...QuestionFields
  }
}

subscription QuestionUpdated($eventId: ID!) {
  questionsUpdated(eventId: $eventId) {
    ...QuestionFields
  }
}

subscription QuestionRemoved($eventId: ID!) {
  questionsRemoved(eventId: $eventId) {
    ...QuestionFields
  }
}
