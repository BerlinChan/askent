fragment QuestionPagedFields on QuestionPaged {
  limit
  offset
  totalCount
  hasNextPage
}
fragment QuestionFields on Question {
  ds_key
  createdAt
  updatedAt
  voteUpCount
  content
  reviewStatus
  star
  top
  author {
    id
    name
    avatar
  }
}

query QuestionsByEvent($input: QuestionSearchInput!) {
  questionsByEvent(input: $input) {
    ...QuestionPagedFields
    list {
      ...QuestionFields
    }
  }
}

query QuestionRealtimeSearch($input: QuestionSearchInput!) {
  questionRealtimeSearch(input: $input) {
    recordName
    totalCount
  }
}

mutation DeleteQuestion($ds_key: ID!) {
  deleteQuestion(ds_key: $ds_key)
}

mutation DeleteAllReviewQuestions($eventId: ID!) {
  deleteAllReviewQuestions(eventId: $eventId)
}

mutation PublishAllReviewQuestions($eventId: ID!) {
  publishAllReviewQuestions(eventId: $eventId)
}

mutation UpdateQuestionReviewStatus(
  $ds_key: ID!
  $reviewStatus: ReviewStatus!
) {
  updateQuestionReviewStatus(
    ds_key: $ds_key
    reviewStatus: $reviewStatus
  ) {
    ...QuestionFields
  }
}
mutation UpdateQuestionStar($ds_key: ID!, $star: Boolean!) {
  updateQuestionStar(ds_key: $ds_key, star: $star) {
    ...QuestionFields
  }
}
mutation UpdateQuestionTop($ds_key: ID!, $top: Boolean!) {
  updateQuestionTop(ds_key: $ds_key, top: $top) {
    ...QuestionFields
  }
}
mutation UpdateQuestionContent($ds_key: ID!, $content: String!) {
  updateQuestionContent(ds_key: $ds_key, content: $content) {
    ...QuestionFields
  }
}
