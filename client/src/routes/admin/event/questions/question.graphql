fragment QuestionPagedFields on QuestionPaged {
  limit
  offset
  totalCount
  hasNextPage
}
fragment QuestionFields on Question {
  id
  createdAt
  updatedAt
  voteUpCount
  content
  reviewStatus
  star
  top
  author {
    id
    name
  }
}

query QuestionsByEvent(
  $eventId: ID!
  $reviewStatus: [ReviewStatus!]!
  $searchString: String
  $pagination: PaginationInputType! # $orderBy: QuestionOrderByInput
) {
  questionsByEvent(
    eventId: $eventId
    reviewStatus: $reviewStatus
    searchString: $searchString
    pagination: $pagination
  )
    # orderBy: $orderBy
    @connection(
      key: "questionsByEvent"
      filter: ["eventId", "reviewStatus", "searchString"]
    ) {
    ...QuestionPagedFields
    list {
      ...QuestionFields
    }
  }
}

mutation DeleteQuestion($questionId: ID!) {
  deleteQuestion(questionId: $questionId)
}

mutation DeleteAllReviewQuestions($eventId: ID!) {
  deleteAllReviewQuestions(eventId: $eventId)
}

mutation PublishAllReviewQuestions($eventId: ID!) {
  publishAllReviewQuestions(eventId: $eventId)
}

mutation UpdateQuestionReviewStatus(
  $questionId: ID!
  $reviewStatus: ReviewStatus!
) {
  updateQuestionReviewStatus(
    questionId: $questionId
    reviewStatus: $reviewStatus
  ) {
    ...QuestionFields
  }
}
mutation UpdateQuestionStar($questionId: ID!, $star: Boolean!) {
  updateQuestionStar(questionId: $questionId, star: $star) {
    ...QuestionFields
  }
}
mutation UpdateQuestionTop($questionId: ID!, $top: Boolean!) {
  updateQuestionTop(questionId: $questionId, top: $top) {
    ...QuestionFields
  }
}
mutation UpdateQuestionContent($questionId: ID!, $content: String!) {
  updateQuestionContent(questionId: $questionId, content: $content) {
    ...QuestionFields
  }
}

subscription QuestionAdded($eventId: ID!, $role: RoleName!) {
  questionAdded(eventId: $eventId, role: $role) {
    ...QuestionFields
  }
}

subscription QuestionUpdated($eventId: ID!, $role: RoleName!) {
  questionUpdated(eventId: $eventId, role: $role) {
    ...QuestionFields
  }
}

subscription QuestionRemoved($eventId: ID!, $role: RoleName!) {
  questionRemoved(eventId: $eventId, role: $role)
}
