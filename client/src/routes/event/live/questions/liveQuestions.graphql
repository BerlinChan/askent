fragment LiveQuestionFields on Question {
  id
  createdAt
  updatedAt
  content
  reviewStatus
  top
  voted
  voteUpCount
  author {
    id
    name
  }
}

query QuestionsByEventAudience(
  $eventId: ID!
  $pagination: PaginationInputType!
) # $orderBy: QuestionOrderByInput
{
  questionsByEventAudience(eventId: $eventId, pagination: $pagination)
    # orderBy: $orderBy
    @connection(key: "questionsByEventAudience", filter: ["eventId"]) {
    ...QuestionPagedFields
    list {
      ...LiveQuestionFields
    }
  }
}

query QuestionsByMe(
  $pagination: PaginationInputType!
) # $orderBy: QuestionOrderByInput
{
  questionsByMe(pagination: $pagination) {
    ...QuestionPagedFields
    list {
      ...LiveQuestionFields
    }
  }
}

mutation CreateQuestion($eventId: ID!, $content: String!) {
  createQuestion(eventId: $eventId, content: $content) {
    ...LiveQuestionFields
  }
}

mutation VoteUpQuestion($questionId: ID!) {
  voteUpQuestion(questionId: $questionId) {
    ...LiveQuestionFields
  }
}

subscription QuestionAddedAudience($eventId: ID!, $role: RoleName!) {
  questionAdded(eventId: $eventId, role: $role) {
    ...LiveQuestionFields
  }
}

subscription QuestionUpdatedAudience($eventId: ID!, $role: RoleName!) {
  questionUpdated(eventId: $eventId, role: $role) {
    ...LiveQuestionFields
  }
}

subscription QuestionRemovedAudience($eventId: ID!, $role: RoleName!) {
  questionRemoved(eventId: $eventId, role: $role) 
}
