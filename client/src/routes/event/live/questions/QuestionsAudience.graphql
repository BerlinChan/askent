fragment QuestionAudienceFields on Question {
  id
  createdAt
  updatedAt
  content
  reviewStatus
  top
  voted
  voteUpCount
  author {
    id
    name
    avatar
  }
}

query QuestionsByEventAudience(
  $eventId: ID!
  $pagination: PaginationInput!
  $order: QuestionOrder
) {
  questionsByEventAudience(
    eventId: $eventId
    pagination: $pagination
    order: $order
  ) @connection(key: "questionsByEventAudience", filter: ["eventId", "order"]) {
    ...QuestionPagedFields
    list {
      ...QuestionAudienceFields
    }
  }
}

query QuestionsByMe(
  $pagination: PaginationInput! # $orderBy: QuestionOrderByInput
) {
  questionsByMe(pagination: $pagination) {
    ...QuestionPagedFields
    list {
      ...QuestionAudienceFields
    }
  }
}

mutation CreateQuestion($input: CreateQuestionInput!) {
  createQuestion(input: $input) {
    ...QuestionAudienceFields
  }
}

mutation VoteUpQuestion($questionId: ID!) {
  voteUpQuestion(questionId: $questionId) {
    ...QuestionAudienceFields
  }
}

subscription QuestionAddedAudience($eventId: ID!, $role: RoleName!) {
  questionAdded(eventId: $eventId, role: $role) {
    ...QuestionAudienceFields
  }
}

subscription QuestionUpdatedAudience($eventId: ID!, $role: RoleName!) {
  questionUpdated(eventId: $eventId, role: $role) {
    ...QuestionAudienceFields
  }
}

subscription QuestionRemovedAudience($eventId: ID!, $role: RoleName!) {
  questionRemoved(eventId: $eventId, role: $role)
}
