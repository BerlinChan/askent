fragment QuestionWallFields on Question {
  id
  createdAt
  updatedAt
  content
  reviewStatus
  top
  star
  voteUpCount
  author {
    id
    name
    avatar
  }
}

query QuestionsByEventWall($input: QuestionSearchInput!) {
  questionsByEventWall(input: $input) {
    ...QuestionPagedFields
    list {
      ...QuestionWallFields
    }
  }
}

# subscription QuestionAddedWall(
#   $eventId: ID!
#   $asRole: RoleName!
#   $questionFilter: QuestionFilter
#   $searchString: String
#   $order: QuestionOrder
#   $limit: Int
# ) {
#   questionAdded(
#     eventId: $eventId
#     asRole: $asRole
#     questionFilter: $questionFilter
#     searchString: $searchString
#     order: $order
#     limit: $limit
#   ) {
#     ...QuestionWallFields
#   }
# }

# subscription QuestionUpdatedWall($eventId: ID!, $asRole: RoleName!) {
#   questionUpdated(eventId: $eventId, asRole: $asRole) {
#     ...QuestionWallFields
#   }
# }

# subscription QuestionRemovedWall($eventId: ID!, $asRole: RoleName!) {
#   questionRemoved(eventId: $eventId, asRole: $asRole)
# }
